<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://alaskasquirrel.github.io</id>
    <title>NewOld </title>
    <updated>2020-09-05T18:53:51.190Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://alaskasquirrel.github.io"/>
    <link rel="self" href="https://alaskasquirrel.github.io/atom.xml"/>
    <subtitle>Plan in decade. Think in years. Work in months. Live in days.</subtitle>
    <logo>https://alaskasquirrel.github.io/images/avatar.png</logo>
    <icon>https://alaskasquirrel.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, NewOld </rights>
    <entry>
        <title type="html"><![CDATA[杨小凯 — 生命是短暂的，唯理论之树长青]]></title>
        <id>https://alaskasquirrel.github.io/post/杨小凯/</id>
        <link href="https://alaskasquirrel.github.io/post/杨小凯/">
        </link>
        <updated>2020-08-21T07:51:47.000Z</updated>
        <content type="html"><![CDATA[<p>(1948-2004)<br>
《中国向何处去》杨小凯 一九六八年元月六日。</p>
<ul>
<li><a href="http://study.huizhou.gov.cn/lessionnew/bdmpa/MPA-A17/contents/thesis/thes005_01.pdf">《后发劣势》</a>杨小凯 ，北京天则经济研究所 2002年4月。</li>
<li><a href="https://www.nsd.pku.edu.cn/cbw/jjxjk/qwxz/250711.htm">《经济改革和宪政转轨》</a>Jeffrey Sachs 胡永泰 杨小凯 2003年。</li>
<li><a href="https://www.nsd.pku.edu.cn/cbw/jjxjk/qwxz/250711.htm">《后发优势与后发劣势——与杨小凯教授商榷》</a> 林毅夫 2003年。</li>
<li><a href="https://www.nsd.pku.edu.cn/cbw/jjxjk/qwxz/250711.htm">《经济改革与宪政转轨：回应》</a> 杨小凯 2003年。</li>
<li>《百年中国经济史笔记-从晚清到2002》杨小凯</li>
</ul>
<p>個人之見，後發劣勢VS後發優勢，是中國經濟發展最佳論題。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[三个世界]]></title>
        <id>https://alaskasquirrel.github.io/post/world/</id>
        <link href="https://alaskasquirrel.github.io/post/world/">
        </link>
        <updated>2020-08-05T07:42:35.000Z</updated>
        <content type="html"><![CDATA[<p>科学发现：☢️</p>
<p><a href="https://www.susanjfowler.com/blog/2016/8/13/so-you-want-to-learn-physics">So You Want to Learn Physics</a> - Susan Fowler<br>
<a href="https://www.goodtheorist.science">How to become a GOOD Theoretical Physicist</a> - <a href="https://webspace.science.uu.nl/~hooft101/">Gerard 't Hooft</a><br>
<a href="https://www.math.columbia.edu/~woit/wordpress">Not Even Wrong</a> - Peter Woit<br>
<a href="http://staff.ustc.edu.cn/~wzhao7/">《从零学相对论》</a>梁灿彬 曹周键<br>
《简明量子力学》<a href="http://www.phy.pku.edu.cn/wubiao/">吴飙</a><br>
《上帝掷骰子吗 – 量子物理史话》<br>
《别闹了，费曼先生》<br>
《皇帝新脑》彭罗斯<br>
<a href="http://staff.ustc.edu.cn/~bjye/">叶邦角</a><br>
<a href="http://power.itp.ac.cn/~cairg/">蔡荣根</a> 中国科学院理论物理研究所<br>
<a href="https://zqyin.wordpress.com">Yin Zhangqi</a><br>
<a href="https://phys.org">Phys.org</a><br>
<a href="https://plus.maths.org/content">Plus Maths Magazine</a><br>
<a href="https://faculty.washington.edu/chudler/hist.html">History of Neuroscience</a><br>
《神经科学——探索脑》<br>
&lt; The Mind &amp; The Brain: Neuroplasticity and  the Power of Mental Force(2002)&gt;译《心智和大脑：神经可塑性和精神力量》<br>
&lt; Is the Brain a Quantum Computer?&gt;<br>
<a href="https://nancysbraintalks.mit.edu">MIT: The Human Brain</a><br>
<a href="https://www.humanbrainproject.eu/en.">Human Brain Project</a><br>
<a href="https://science.sciencemag.org">Science</a><br>
<a href="https://www.quantamagazine.org">Quanta Magazine - Illuminating Science</a><br>
<a href="https://www.brainfacts.org">BrainFacts</a><br>
<a href="http://nautil.us">Nautilus | Science Connected</a><br>
<a href="https://www.worldwideneuro.com">World Wide Neuro</a><br>
<a href="https://www.climatechangenews.com/">Climate Change News</a><br>
<a href="https://www.ximalaya.com/keji/30980200/228347042">脑人言podcast：AI离大脑究竟有多远？脑模拟研究解密(专访孙哲)</a>  &amp; <a href="https://zhuanlan.zhihu.com/p/94380103">文字稿</a><br>
<a href="https://braininspired.co/podcast/">Brain Inspired</a> A podcast where neuroscience and AI converge.<br>
<a href="https://alleninstitute.org/what-we-do/brain-science/about/team/staff-profiles/christof-koch/consciousness-redux/">Consciousness Redux</a> - Christof Koch - <a href="https://www.scientificamerican.com/sciammind/">Scientific American MIND</a></p>
<p>太空探索：🔱</p>
<p><a href="https://www.eso.org/public">European Southern Observatory</a><br>
<a href="https://www.spacetelescope.org">HUBBLE Space Telescope</a><br>
<a href="https://www.iau.org">International Astronomical Union</a><br>
<a href="https://www.darksky.org">International Dark-Sky Association</a><br>
<a href="https://www.space.com">Space.com</a><br>
<a href="https://www.universetoday.com/">Universe Today</a><br>
<a href="https://everydayastronaut.com/">Everyday Astronaut</a><br>
<a href="https://www.spacetechasia.com">SpaceTechAsia</a><br>
<a href="https://spaceflightnow.com">Spaceflight Now</a><br>
<a href="https://www.museumofflight.org">The Museum of Flight</a><br>
<a href="https://historicspacecraft.com">Historic Spacecraft</a><br>
<a href="https://apolloinrealtime.org">Apollo in Real Time</a><br>
<a href="http://www.spaceflightfans.cn">航天爱好者网</a><br>
<a href="https://planetarynews.org/">Planetary Exploration Newsletter</a><br>
<a href="https://www.astrobetter.com/">AstroBetter</a> tips and tricks for professional astronomers<br>
<a href="http://bzhang.lamost.org">张博</a><br>
<a href="https://caseyhandmer.wordpress.com">Casey Handmer</a><br>
<a href="https://jatan.space">Jatan's Space</a></p>
<p>人类语言：🈳</p>
<p>&lt; 中国人学英语&gt;吕淑湘  收录于《吕淑湘全集(第十四卷)》辽宁教育出版社。<br>
《英语发展史》张勇先 外语教育与研究出版社 2014年出版。<br>
《英語讀音規則与拼法》商务印書館1960年<br>
图文并茂：</p>
<ul>
<li>&lt; English Grammar Illustrated &gt;Gabriele Stobbe</li>
<li>&lt; Chinese-English Bilingual Visual Dictionary&gt;</li>
<li>&lt; English For Everyone: English Grammar Guide&gt;</li>
<li>&lt; English For Everyone: English Vocabulary Builder&gt;</li>
<li>&lt; English Through Pictures &gt;1、2、3册.</li>
</ul>
<p>&lt; Basic Korean : A Grammar and Workbook&gt; Andrew Byon</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[近代日本人 · 中国游记（更新中）]]></title>
        <id>https://alaskasquirrel.github.io/post/中国游记/</id>
        <link href="https://alaskasquirrel.github.io/post/中国游记/">
        </link>
        <updated>2020-08-03T16:16:47.000Z</updated>
        <content type="html"><![CDATA[<p>&lt;近代日本人中国游记总序&gt;张明杰 刊于《北中国纪行  清国漫游志》中华书局2007年1月出版。</p>
<p>东洋文库近代中国研究委员会编，1980年。《明治以降日本人的中国旅行记：解题》(『明治以降日本人の中国旅行記：解題』)</p>
<ul>
<li><a href="http://www.toyo-bunko.or.jp">東洋文庫</a> <a href="http://www.tbcas.jp/ja/index.html">東洋文庫 - 現代中国研究資料室</a></li>
</ul>
<p>小岛晋治监修《幕末明治中国见闻录集成》全20卷，ゆまに书房，1997年。二十卷<br>
小岛晋治监修《大正中国见闻录集成》10卷，同书房1999年版。<br>
东亚同文书院《中国省别全志》1920年。1940年代《新修支那省别全志》再版。</p>
<p>竹添进一郎《栈云峡雨日记》<br>
大鸟圭介《长城游记》1894<br>
黑田清隆《漫游见闻录》1888<br>
村木正宪《清韩纪行》1900<br>
米内山庸夫《云南四川踏查记》</p>
<p><a href="https://www.kosho.or.jp">日本の古本屋</a>(日本旧书网)<br>
<a href="https://ja.ukiyo-e.org/">日本浮世繪檢索</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[转载] 形式语义学]]></title>
        <id>https://alaskasquirrel.github.io/post/formalsemantics/</id>
        <link href="https://alaskasquirrel.github.io/post/formalsemantics/">
        </link>
        <updated>2020-07-23T12:20:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="陈涛形式语义学基础"><a href="http://blog.sciencenet.cn/blog-209720-265972.html">陈涛：形式语义学基础</a> 2009-10-29</h3>
<p>  陈意蕴的 《形式语义学基础》，还有另外两本中文教材：《程序设计语言的形式语义》，外文的好像有《程序设计语言的形式语法及语义》（翻译过来的，英文好象是Formal syntactic and semantic of programming language），还有《指称语义 denotational semantic》。</p>
<p>网上有几本免费的形式语义学电子版教材，国内正式出版的：<br>
1、周巢尘，《形式语义学引论》，湖南科技出版社（绝版）<br>
2、周之英，翻译，《计算机形式规范概论》，清华大学出版社（绝版）<br>
3、屈延文，《形式语义学基础与形式说明》，科学版（绝版）<br>
4、陆汝钤，《计算机语言的形式语义》，科学版<br>
5、陈意云，（实际是编译的），《形式语义学基础》，中国科技大学出版社<br>
6、陈意云，（实际是编译的），《程序设计语言理论》，中国科技大学出版社<br>
7、宋国新，翻译，《程序设计语言的形式语法及语义》，机工版</p>
<p>从发展来说，国内的形式语义学或程序理论的教材，落后国外十年以上。国外现在最流行的几本教材是：<br>
1、《Semantics of Programming Languages》<a href="https://cgunter.cs.illinois.edu">Carl A.Gunter</a> MIT Press 1992<br>
这是目前也许是最流行的一本教材，主要采用了简单类型的Lambda Calculus和范畴学来表达语义学，内容取舍比较合理，章节安排也不错，属于高级教程，评价也很高，很多大学都推荐使用。<br>
2、《The Formal Semantics of Programming Languages》<a href="https://www.cl.cam.uk/~gw104/">Glynn Winskel</a> MIT Press 1993<br>
另一本流行的一本教材，作者Winskel是剑桥大学的教授，该书在欧洲几乎成为标准教材了，评价也很高，中高级教程，很多大学都推荐使用，已经出了中文版，大家可以到书店买到。<br>
3、《Foundations for Programming Languages 》<a href="https://theory.stanford.edu/~jcm/">John C. Mitchell</a> MIT Press 1996<br>
作为桌案上的参考书就最好了，作者是斯坦福教授。这本书是一本巨作，内容齐全，大量泛代数内容，绝对是超高级教程，但作为教材的话内容太多了，850页，真的是本大部头，复印这本书，足足花了我两个小时和20刀！<br>
4、《Theories of Progamming Languages》<a href="https://www.cs.cmu.edu/~jcr/">John C. Reynolds</a> Cambridge Press 1998<br>
Reynolds是CMU教授，他的这本教材出发角度和上面的几本有所不同，按作者的话来说，就是尽量避免使用高深的数学理论，诸如范畴学之类的东西，同时这本书内容涉及也比较广，甚至有并发理论和CSP。该书在评价非常高，推荐大家看。<br>
5、《Semantics of Programming Languages》（R.D. Tennent）Prentice-Hall 1990<br>
这本书的最大特点就是采用imperative language作为研究对象，和国内的教学最符合了，国外很多大学，特别是欧洲的大学，普遍采用函数式汝ML语言作为研究和教学语言。作者R.D. Tennent在八十年代初，曾经出版过一本《Principles of Programming Languages》，国际国内都很多人参考过这本书。<br>
6、《Introduction to the Theory of Programming Languages》<a href="https://bertrandmeyer.com">Bertrand Meyer</a><br>
Prentice-Hall 1988<br>
作者大家都很熟悉了，他的另一本书《Object-Oriented Software Construction》前几年就已经引进中国了。这本书几乎没有高深的数学内容，可能这本书出的比较早些，书的内容要比前面的几本书都要容易浅些，但作为入门的书，我推荐这本。</p>
<p>陆汝钤院士的《形式语言与语义》非常好，对于多个不同语义体系介绍的比较透彻，汝指称语义，操作语义，等等。</p>
<h3 id="汪东明计算机语言的形式语义研究"><a href="http://blog.sciencenet.cn/blog-468147-352412.html">汪东明：计算机语言的形式语义研究</a> 2010-8-12</h3>
<p>计算机科学对语言研究（包括对自然语言和对人工语言）大致三个向：语法syntax、语义semantics、语用pragmatics<br>
-- 语法研究语言的形态结构<br>
-- 语义研究语言与其所指代对象的联系<br>
-- 语用研究语言和其使用者之间的联系（从使用者角度、按使用者的需求对语料进行差异化）</p>
<p>  计算机没有智能，计算机智能都是假的，是人给它安装上去的，所以计算机语言最大的特点是形式化（Formalization，包含规范化Normalization的意思），计算机语言的形式化分为语法形式化和语义形式化两个方面，形式语义学研究语义形式化，包括操作语义学、指称语义学、公理语义学和代数语义学四种。具体可参考：  操作语义的基本思想是建立一个抽象机器以模拟程序在执行过程中如何进行数据处理。  指称语义的思想是使语言的每一成分对应于一个数学对象，该对象称为该语言成分的指称，程序看作输入域到输出域的映射，输入域和输出域统称为论域。因此论域与映射是指称语义的基本研究对象。  公理语义实在程序正确性验证的基础上发展起来的，它给出一种方法，使人们在给定的前提下，验证某种特性是否成立。  代数语义的基本思想是把描述语义的逻辑体系和满足这个逻辑系统的各种模型统一在一起，同时把模型的集合看成是以代数机构，研究这些模型之间的关系。</p>
<p>国内计算机形式语义学参考书：<br>
1、周巢尘，《形式语义学引论》，湖南科技出版社（绝版）<br>
2、周之英，翻译，《计算机形式规范概论》，清华大学出版社（绝版）<br>
3、屈延文，《形式语义学基础与形式说明》，科学版（绝版）<br>
4、陆汝钤，《计算机语言的形式语义》，科学版<br>
5、陈意云，（实际是编译的），《形式语义学基础》，中国科技大学出版社<br>
6、陈意云，（实际是编译的），《程序设计语言理论》，中国科技大学出版社<br>
7、宋国新，翻译，《程序设计语言的形式语法及语义》，机工版</p>
<p>从发展来说，国内形式语义学或程序理论的教材，落后国外十年以上，国外现在最流行的几本教材是：<br>
1、《Semantics of Programming Languages》（Carl A.Gunter）MIT Press 1992  这是目前最流行的一本高级教程，主要采用简单类型Lambda Calculus和范畴学来表达语义学，章节安排、内容取舍比较合理，评价也很高，很多大学都推荐使用。<br>
2、《The Formal Semantics of Programming Languages》（Glynn Winskel）MIT Press 1993  另一本流行的一本中高级教程，作者Winskel是剑桥大学的教授，该书在欧洲几乎成为标准教材了，评价也很高，很多大学都推荐使用，已有中文版。<br>
3、《Foundations for Programming Languages 》（John C. Mitchell ）MIT Press 1996  作者是斯坦福教授。该书内容齐全，850页，大部头，绝对是超高级教程，适于作为参考书。<br>
4、《Theories of Progamming Languages》（John C. Reynolds）Cambridge Press 1998  Reynolds是CMU教授，该书出发角度和上面的几本有所不同，按作者的话来说，就是尽量避免使用高深的数学理论，诸如范畴学之类的东西，同时这本书内容涉及也比较广，甚至有并发理论和CSP。该书评价非常高，推荐大家看。<br>
5、《Semantics of Programming Languages》（R.D. Tennent）Prentice-Hall 1990  这本书的最大特点就是采用imperative language作为研究对象，和国内的教学最符合了，国外很多大学，特别是欧洲的大学，普遍采用函数式汝ML语言作为研究和教学语言。作者R.D. Tennent在八十年代初，曾经出版过一本《Principles of Programming Languages。<br>
6、《Introduction to the Theory of Programming Languages》（Bertrand Meyer）Prentice-Hall 1988 作者另一本书《Object-Oriented Software Construction》前几年就已经引进中国了。这本书几乎没有高深的数学内容，可能这本书出的比较早些，书的内容要比前面的几本书都要容易浅些，可作为入门的书。</p>
<p>Game Semantics 博弈语义</p>
<p>Book:  A Comprehensive Book List for Advanced Study in the Logical Foundations, Semantics and Type Theories of Modern Programming Languages</p>
<p>清单分类如下</p>
<ol>
<li>Semantic Theory of Programming Languages</li>
<li>Set Theory, Category Theory &amp; Universal Algebra</li>
<li>Lambda Calculus, Combinatory Logic &amp; Related Calculi</li>
<li>Logics, Proof Theory &amp; Type Theory</li>
<li>Foundations and Philosophy of Mathematics</li>
<li>Handbooks &amp; Source Books</li>
<li>Historical &amp; Biographical</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Windows 10 配置]]></title>
        <id>https://alaskasquirrel.github.io/post/windows/</id>
        <link href="https://alaskasquirrel.github.io/post/windows/">
        </link>
        <updated>2020-06-26T12:15:51.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://support.microsoft.com/zh-cn/help/3159635/windows-10-update-assistant">Windows 10 更新助手</a><br>
<a href="https://www.w10privacy.de/english-home/">W10Privacy</a> 禁用追踪监控功能</p>
<p><a href="https://github.com/lukesampson/scoop">Scoop</a> 软件包搜索安装管理，开源软件替代商业应用：⚙️</p>
<ul>
<li>PotPlayer 影音视频播放器</li>
<li>7zip 解压软件</li>
<li>Brave 浏览器 https://github.com/brave</li>
<li>ccleaner 系统清理 ，亦可通过它卸载某些软件.</li>
<li>Everything 文件搜索</li>
<li>GoldenDict 词典</li>
<li>SumatraPDF 阅读器</li>
</ul>
<p>O&amp;O ShutUp10 隐私保护和设置优化工具 https://www.oo-software.com/en/shutup10<br>
网络DNS ：<a href="https://developers.cloudflare.com/1.1.1.1/setting-up-1.1.1.1">1.1.1.1</a><br>
Malwarebytes 安全防护 https://www.malwarebytes.com/premium/<br>
ClamWin Free Antivirus<br>
GlassWire 网络防火墙 https://www.glasswire.com<br>
TMAC 修改网卡mac地址工具 https://technitium.com/tmac</p>
<p>国内搜索引擎：👁‍🗨</p>
<ul>
<li>DogeDoge https://www.dogedoge.com</li>
<li>秘迹搜索 https://mijisou.com</li>
</ul>
<p>RIME 开源输入法 https://rime.im</p>
<p>系统设置：🔒 <a href="https://fix10.isleaked.com">可选项一律 off 关闭</a><br>
如若通过 Microsoft Store 安装应用，推荐 Grover Podcast 播客管理软件。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[中國（讀本）]]></title>
        <id>https://alaskasquirrel.github.io/post/culture/</id>
        <link href="https://alaskasquirrel.github.io/post/culture/">
        </link>
        <updated>2020-06-19T16:56:47.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>《中国摄影史》Terry Bennett 中国摄影出版社。</li>
<li><a href="http://www.bjmem.com.cn">北京記憶</a></li>
<li><a href="https://new.shuge.org">书格</a></li>
<li><a href="https://www.hpcbristol.net">Historical Photographs of China</a></li>
<li><a href="https://chinafolio.com">Chinafolio</a></li>
<li><a href="http://www.red-colornewssoldier.com">Red-Color News Soldier</a></li>
<li><a href="http://www.ioc.u-tokyo.ac.jp/">日本東京大學 東洋文化研究所</a></li>
<li>《辛亥革命的影像记忆》杨天石 中国人民大学出版社</li>
<li>《叫魂：1768年中国妖术大恐慌》孔飞力(1933-2016) 著 上海三联书店2012年出版。</li>
<li>《正倉院考古記》傅雲子(1902-1948) , 東京文求堂書店出版1941年。</li>
<li>金毓黻(1887-1962)</li>
<li>《國粹學報》(古學彙刊)</li>
<li>《甲寅雜誌》章士钊(1881-1973)等</li>
<li><a href="http://www.nssd.org/journal/cn/81391X/200701/">&lt;新文化是如何&quot;运动&quot;起来的——以《新青年》为视点&gt;王奇生</a><br>
《五四新論：既非文藝復興，亦非啓蒙運動》（[五四]八十周年紀念論文集）余英時等著<br>
&lt; Karl Marx: His Life and Environment&gt;Isaiah Berlin(1909-1997)译《卡尔·马克思：生平与环境》</li>
<li>《敬告青年》陳獨秀(1879-1942), 《新青年》第一卷第一號，一九一五年九月十五日。</li>
<li>《文學改良刍议》胡適(1891-1962), 《新青年》第二卷第五號，一九一七年一月一日。</li>
<li>《文學革命論》陳獨秀(1879-1942), 《新青年》第二卷第六號，一九一七年二月一日。</li>
<li>&lt;中国文化传统与现代化 - 兼论中国的专制主义&gt;李慎之(1923—2003),《战略与管理》2000年第4期。</li>
<li>《國史大綱》上下冊 錢穆(1895-1990) 上海商務印書館1940年6月出版。</li>
<li>《中國文化之精神價值》唐君毅(1909-1978) 1953年</li>
<li>《歷史與思想》余英時 聯經出版社1976年出版。</li>
<li>《飲冰室合集》梁啓超(1873-1929) 中華書局1936年1月出版。</li>
<li>《鲁迅著译编年全集》王世家(编)止庵(编) 人民出版社</li>
<li>《蔣介石日記》</li>
<li>《宋子文日記》</li>
<li>《中国农村经济：河北和山东的农民发展1890-1949》Ramon H. Myers(马若孟)</li>
<li>《中國經濟史研究》上下冊 全漢昇</li>
<li>《中国历代人口统计资料研究》杨子慧 主编<br>
<a href="https://www.haijiaoshi.com">海交史|东亚文史研究动态网</a><br>
亨利 • 考狄（Henri Cordier, 1849—1925）编《西人论中国书目》（Bibliotheca Sinica）<br>
《近代来华外国人名辞典》中国社会科学院近代史所翻译室编，1980年。<br>
《中西交通史料汇编》张星烺 (1881～1951)编注，原出版于1930年。1977年7月，中华书局出版了朱杰勤整理的校订本。<br>
<a href="http://www.lishiyushehui.cn">历史与社会高等研究所</a><br>
冯学荣</li>
<li><a href="http://www.rmlt.com.cn/2016/0620/429319.shtml">&lt;准确认识今天的世界&gt;</a> 吴建民(1939-2016) . 2016年3月30日, 外交学院。</li>
<li><a href="https://www.marxists.org">Marxists Internet Archive</a></li>
<li><a href="http://davidharvey.org/">Reading Marx's Capital with David Harvey</a></li>
<li><a href="https://sites.uw.edu/uwpoliticaleconomy/">Political Economy Forum at the University of Washington</a></li>
<li>&lt; Main Currents of Marxism&gt; Leszek Kolakowski 译《马克思主义的主要流派》三卷，黑龙江大学出版社2015.</li>
<li>John Locke (1632－1704)</li>
<li>&lt; Personal Knowledge&gt; Michael Polanyi (1891-1976) 译《个人知识：迈向后批判哲学》</li>
<li>&lt; The Poverty of Historicism&gt; SirKarl Raimund Popper (1902-1994) 译 《历史决定论的贫困》</li>
<li>&lt; The Open Society and its Enemies&gt; SirKarl R Popper 译 《开放社会及其敌人》</li>
<li>Edward Albert Shils (1910-1995)</li>
<li>Benjamin I. Schwartz (1916-1999)</li>
<li>Jr. Arthur M. Schlesinger (1917-2007)</li>
</ul>
<figure data-type="image" tabindex="1"><img src="https://alaskasquirrel.github.io/post-images/1597254230812.jpg" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[中国经济  — 两个美国人的分析视角2019]]></title>
        <id>https://alaskasquirrel.github.io/post/economic/</id>
        <link href="https://alaskasquirrel.github.io/post/economic/">
        </link>
        <updated>2020-06-12T10:16:42.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://www.youtube.com/watch?v=Mh0vEaac78U">Bridgewater’s Ray Dalio Discusses the Impact of China’s Growth on the World Economy</a>  (Aug 6, 2019) &amp; <a href="https://www.bridgewater.com/china/">Our Views on China</a></p>
<ul>
<li>Ray Dalio 预测，中国经济未来必将超越美国，领导全球经济。倘若有所变数，主要因素是：中美冲突、气候问题、流行疾病、政治问题。</li>
</ul>
<p>AEI(The American Enterprise Institute, 美国企业研究所) <a href="https://www.aei.org/profile/derek-m-scissors">Derek Scissors</a> :  <a href="https://www.aei.org/research-products/report/chinas-economic-miracle-in-context/">China's economic 'miracle' in context</a> Aug 26, 2019.</p>
<ul>
<li>Derek Scissors 尝试将中日韩三国的经济腾飞阶段建立起比较，呈现三国在经济改革相似历史时间节点上的表现，描述出多维度的差异。结论：多指标上来看，中国的发展水平不如同期的韩国，接近日本。中国的“经济奇迹”并未超越一般性的战后重建。现阶段，日韩都已进入相对停滞时期，而中国似乎难逃经济诅咒。</li>
</ul>
<p>👿Tinyfool (郝培强) 曾通过视频及文字简述过这两种经济分析:</p>
<ul>
<li><a href="https://codechina.org/2019/08/ray-dalio-china-usa/">桥水基金Ray Dalio谈中美贸易冲突和中国崛起对世界的影响</a></li>
<li><a href="https://codechina.org/2019/09/aei-derek-scissors-china/">美国智库AEI最新报告：中国经济&quot;奇迹&quot;的来龙去脉</a></li>
</ul>
<p>😈Tinyfool (郝培强) 另有两篇博文值得玩味：</p>
<ul>
<li><a href="https://codechina.org/2019/08/shanghai-beijing-hongkong-taiwan-taipei/">北京、上海，大陆发达城市和香港、台湾省城市的经济数据对比</a></li>
<li><a href="https://codechina.org/2019/08/hongkong-taiwan-mainland-cpi-coi-gdp/">香港、台湾、大陆贫富差距和消费数据对比</a></li>
</ul>
<p><a href="https://www.acton.org/publications/transatlantic/2019/08/27/americas-poorest-are-richer-most-average-europeans-study/">America's poorest are richer than most average Europeans: Study</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[爱国守法（更新中）]]></title>
        <id>https://alaskasquirrel.github.io/post/law/</id>
        <link href="https://alaskasquirrel.github.io/post/law/">
        </link>
        <updated>2020-06-10T10:16:18.000Z</updated>
        <content type="html"><![CDATA[<p>《中华人民共和国宪法》(2018修正)<br>
《中华人民共和国民法典》<br>
《中华人民共和国密码法》<br>
《中华人民共和国电子签名法》<br>
《中华人民共和国社会保险法》<br>
《中华人民共和国企业所得税法》<br>
《中华人民共和国个人所得税法》<br>
《中华人民共和国劳动法》<br>
《中华人民共和国妇女权益保障法》<br>
《中华人民共和国公司法》<br>
《中华人民共和国电子商务法》<br>
《中华人民共和国网络安全法》<br>
《互联网信息服务管理办法》<br>
《区块链信息服务管理规定》<br>
《中华人民共和国国家安全法》<br>
&lt;工业和信息化部关于清理规范互联网网络接入服务市场的通知&gt;2017年1月17日<br>
&lt;具有舆论属性或社会动员能力的互联网信息服务安全评估规定&gt;中国网信网，2018年11月30日起施行。<br>
&lt;教育移动互联网应用程序备案管理办法&gt;教育部</p>
<ul>
<li>《中华人民共和国刑法》：<br>
  第二百八十五  违反国家规定，侵入国家事务、国防建设、尖端科学技术领域的计算机信息系统的，处三年以下有期徒刑或者拘役。<br>
  第二百八十六条    违反国家规定，对计算机信息系统功能进行删除、修改、增加、干扰，造成计算机信息系统不能正常运行，后果严重的，处五年以下有期徒刑或者拘役；后果特别严重的，处五年以上有期徒刑。<br>
  违反国家规定，对计算机信息系统中存储、处理或者传输的数据和应用程序进行删除、修改、增加的操作，后果严重的，依照前款的规定处罚。<br>
  故意制作、传播计算机病毒等破坏性程序，影响计算机系统正常运行，后果严重的，依照第一款的规定处罚。<br>
  第二百八十七条    利用计算机实施金融诈骗、盗窃、贪污、挪用公款、窃取国家秘密或者其他犯罪的，依照本法有关规定定罪处罚。</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[转载] 严锋——不必读的书的清单]]></title>
        <id>https://alaskasquirrel.github.io/post/books/</id>
        <link href="https://alaskasquirrel.github.io/post/books/">
        </link>
        <updated>2020-06-03T14:27:57.000Z</updated>
        <content type="html"><![CDATA[<p>这里提供一份我心目中<br>
不必读的书的清单<br>
严锋写给读者<br>
2017年8月5日</p>
<p>  人生有涯，千万不要不加选择地读书，这里提供一份我心目中不必读的书的清单。<br>
  首先我从来不认同开卷有益这种说法。读书并非开卷有益，有些书无益，有些书无聊，有些书还有害。读书要做减法，从前如此，现在更如此。现在读书的时间本来就被微博微信挤掉那么多，剩下的就更要小心使用了。信息时代，如果什么都看，人就被信息淹死了。<br>
  专业阅读与非专业阅读的差别非常大。专业人士需要搞清楚与自己研究相关的一切文献，有趣无趣都得看，也是没有办法。非专业人士就没有必要受这个罪了。所以对于专业人士推荐的书，非专业人士也要长个心眼，别听见风就是雨，也许他的蜜糖，就是你的毒药。<br>
  我也不认同要多看经典的空泛说法。很多经典的意义，仅仅是一种历史意义，它们推动了历史的发展，照亮了人类的道路。但我们对之顶礼膜拜就可以了，今天就不用真的去读了。比如哥白尼的《天体运行论》，牛顿的《自然哲学的数学原理》，康德的《宇宙发展史概论》等等。</p>
<p>我是中文系的，所以主要谈谈文学方面不要读的书。</p>
<ul>
<li>第一，很多中国古典小说不必读。我这么说会激起很多人的强烈反感，但小说真的不是我们的强项。具体原因这里就不展开了。除了四大名著、《金瓶梅》《儒林外史》《聊斋》“三言二拍”以外，好的真是不多了。比如《封神演义》，人物刻板，情节单一，思想陈腐，盛名之下，其实难副。我这辈子最后悔的一件事，就是在年轻时写了一本《封神演义导读》，那时候真是太缺钱了。</li>
<li>第二，绝大多数从1949年到1976年的中国当代文学作品不必读。这段时期的作品，非文学的因素占比例太大，而这些非文学因素也已经时过境迁，今非昔比，所以，不必像我们小时候那样饿急了什么都吃，捡到碗里都是菜了。</li>
<li>第三，很多当代中国人写的历史小说不必读。历史小说是最难写的小说之一，需要经历、学识、性情、沉浸，最吃细节、韵味、笔力、文字功夫，这些对于当代中国人来说，尤其困难。比如有一位非常有名的历史小说作家，描写一位晚清宦海沉浮几十年的封疆大吏：“激动得两眼闪动着泪花”，“两双滚烫的大手紧紧地握着”……我的天呀。</li>
<li>第四，绝大多数西方通俗小说不必读。因为真正好看的也就那么少数。请注意，我这里说的还仅仅是好看，还不是好。绝大部分都是垃圾，真正的垃圾，包括许多知名作家和知名作品。比如有位号称头号畅销的作家，这位先生是垃圾中的战斗机。</li>
<li>第五，所有名著的续书不必读。无论古今中外，名著的续书都很失败，都完美解释了一句成语的含义叫狗尾续貂。道理很简单：此作者非彼作者。</li>
<li>第六，一些古老的哲学著作也不必再读了。这条会引起很多人的强烈反感。但哲学著作往往很晦涩，有很多功能又正在逐渐被科学所替代，所以也可以在很大程度上淡出普通读者的视野了。文学青年动不动就海德格尔如何，维特根斯坦如何，胡塞尔如何。恕我直言：你看得懂吗？我年轻的时候，把别人谈恋爱的时间都用来啃哲学了，结果什么也没啃出来，只啃出个晚婚。</li>
<li>第七，所有的成功学、心灵学、鸡汤类书都不必读。骗人的，没用。</li>
<li>第八，所有阴谋论的书不要读。骗人的，有害。</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[翻译] Blockchain: Application Considerations]]></title>
        <id>https://alaskasquirrel.github.io/post/blockchain-application-considerations/</id>
        <link href="https://alaskasquirrel.github.io/post/blockchain-application-considerations/">
        </link>
        <updated>2020-05-29T02:37:33.000Z</updated>
        <content type="html"><![CDATA[<p>探索學習：🤡<br>
<a href="https://ethfans.org">EthFans|以太坊爱好者</a><br>
<a href="https://eprint.iacr.org/">Cryptology ePrint Archive</a><br>
<a href="https://nakamotoinstitute.org/">Satoshi Nakamoto Institute</a><br>
<a href="https://doi.org/10.6082/NIST.IR.8202">Blockchain Technology Overview</a><br>
<a href="https://bitcoinmagazine.com">Bitcoin Magazine</a><br>
<a href="https://breakermag.com/">BREAKERMAG</a><br>
<a href="https://unchainedpodcast.com/">Laura Shin - Unchained Podcast</a><br>
<a href="https://www.lopp.net/">Jameson Lopp</a><br>
<a href="https://adamcaudill.com/2018/06/21/bitcoin-is-a-cult/">Adam Caudill- Bitcoin is a Cult</a></p>
<p>原文：<a href="https://doi.org/10.6082/NIST.IR.8202">Blockchain Technology Overview</a> National Institute of Standards and Technology</p>
<p>  由于区块链技术仍然是新技术，许多组织正在寻找兼容的方法运用在自身的商业中。人们非常担心错过这项技术。组织机构将这个问题视为“我们想在某个地方使用区块链，我们可以在哪里使用? 这导致了人们对这项技术的失望，因为它不能得到普遍应用。最好的方法是首先了解区块链技术，了解其适用范围，然后再进行分析。确定可能适合区块链范式的系统。<br>
  如果活动或系统需要以下特性，则区块链技术解决方案可能适用：</p>
<ul>
<li>多参与者</li>
<li>分布式参与者</li>
<li>需要或缺乏可信任的第三方</li>
<li>工作流本质上是事务性的(例 数字资产/信息之间的传输方)</li>
<li>需要一个全球稀缺的数字标识符(例 数字艺术，数字土地，数字属性)</li>
<li>需要分散命名服务或有序注册</li>
<li>需要一个加密安全的所有权系统</li>
<li>需要减少或消除调解和争端解决的人工努力</li>
<li>需要实时监控监管者和被监管者之间的活动实体</li>
<li>需要完整的数字资产来源和完整的交易历史被共享在参与者</li>
</ul>
<p>  一些机构和组织已经制定了指南来帮助确定区块链是否是适合于特定的系统或活动，以及属于哪种区块链技术获得最大的好处。在本节中，一些文章和建议从几个不同的突出部门-联邦政府，学术界，技术出版物，技术网站和软件开发人员。<br>
  美国国土安全部(DHS)科技理事会一直在研究区块链技术，并创建了一个流程图来帮助确定开发活动是否需要区块链。流程图重新绘制得以如下展现<br>
<img src="https://alaskasquirrel.github.io/post-images/1594435242668.png" alt="" loading="lazy"></p>
<ul>
<li>(图片 United States Department of Homeland Security Science &amp; Technology Directorate)</li>
</ul>
<h3 id="特殊的区块链注意事项">特殊的区块链注意事项：</h3>
<p>  在决定是否使用区块链时，必须考虑其他因素，并确定这些因素是否限制了一个人使用区块链或特定类型的区块链:</p>
<ul>
<li>Data Visibility<br>
* 允许的区块链网络可能显示也可能不显示区块链数据公开。该数据可能只对那些在区块链网络内的人可用。考虑数据可能遵循某些法规(例如个人可识别资料(PII)或一般资料保障规例(GDPR)规章)。这样的数据可能适合存储，也可能不适合存储，即使是在区块链网络中。<br>
* 允许的区块链网络可以允许任何人检查和贡献区块链。这些数据通常是公开的。这就引出了几个问题必须被考虑。应用程序的数据是否需要可用每个人吗?拥有公共数据有什么危害吗?</li>
<li>Full transactional history<br>
一些区块链网络提供的完整公共历史数字资产——从创作到包含其中的每一笔交易。这个特性可能是对某些解决方案有利，对其他解决方案不利。</li>
<li>Fake Data Input<br>
  由于多个用户都参与了区块链，有些人可能会参与提交假数据，模拟来自有效来源的数据(如传感器数据)。是很困难的自动验证进入区块链网络的数据。聪明的合同实现可能提供额外的检查来帮助验证数据</li>
<li>Tamper evident and tamper resistant data<br>
  许多应用程序遵循“CRUD”(创建，读取，更新，删除)功能的数据。有区块链，就只有CR(创建、读取)。有一些方法可以用来“弃用”较旧的数据找到了较新的版本，但是没有对原始数据的删除过程。通过使用新的事务可以修改和更新以前的事务，同时可以更新数据提供完整的历史。但是，即使一个新事务标记了一个旧事务作为“已删除”—数据仍然会出现在区块链数据中，即使它不是显示在处理数据的应用程序中。</li>
<li>Transactions Per Second<br>
  事务处理速度高度依赖于共识模型使用。目前交易在许多不允许的区块链网络的执行速度与其他信息技术解决方案的执行速度不同块的发布时间会变慢(通常以秒为单位，但有时也会这样分钟)。因此，依赖于区块链的应用程序在等待数据被提交时可能会出现一些减速。人们必须问他们的应用程序是否可以处理相对较慢的速度事务处理?</li>
<li>Compliance<br>
  使用区块链技术不排除一个系统遵守任何适用的法律法规。例如，有许多遵从性与确定的PII或GDPR相关的立法和政策的考虑某些信息不应该放在区块链上。此外,某些各国可能会限制跨其地理区域传输的数据类型边界。在其他情况下，某些立法可能规定金融事务必须写入其边界内的节点。在在这些情况下，公共的，不允许的连锁可能是不太合适的满足监管需要的许可的或混合的方法。法律法规的另一个例子是任何区块链网络管理联邦记录。联邦档案要遵守许多法律法规联邦机构本身在使用时必须遵循具体的联邦指导方针区块链技术。</li>
<li>Permissions —— 对于被许可的区块链网络，有一些考虑自己的权限<br>
* Granularity-系统内的权限是否允许足够的粒度针对用户可能需要的特定角色(以类似基于角色的访问方式)控制方法)在系统内执行操作<br>
Permissioned 区块链网络允许等更为传统的角色 管理员、用户、验证者、审核员等。<br>
* Administration——谁可以管理权限?一旦权限对用户进行管理，可以轻易地撤消它们吗?</li>
<li>Node Diversity—— 一个区块链网络仅仅是所有的集合参与网络的现有节点。如果所有节点共享类似的硬件，软件、地理位置和消息传递模式存在一定数量与未发现的安全漏洞的可能性相关的风险。这种风险是通过分散化的网络异构设备减轻，哪些可以定义为“任何一个节点与广义集”</li>
</ul>
<p>CoinDesk: <a href="https://www.coindesk.com/dont-use-blockchain-unless-really-need-one">Don’t Use a Blockchain Unless You Really Need One</a>, Jan 2018.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[翻译] Lisp：50周年 （1958-2008）]]></title>
        <id>https://alaskasquirrel.github.io/post/Lisp50/</id>
        <link href="https://alaskasquirrel.github.io/post/Lisp50/">
        </link>
        <updated>2020-05-28T08:07:38.000Z</updated>
        <content type="html"><![CDATA[<p>原文：<a href="https://franz.com/services/conferences_seminars/lisp_50th-birthday.lhtml">Lisp's 50th Birthday Celebration</a> by <a href="https://www.dreamsongs.com/Bio.html">Richard P. Gabriel</a></p>
<p>译文：<br>
  事起1958 年 10 月，John McCarthy 发表了一系列关于自己正致力于设计一个适用于人工智能研究的新编程语言的报告中的一篇。该篇报告里首次将这一新编程语言命名为 LISP。此后50 年，Lisp 仍被广泛使用。在过往的 50 年中，伴随着许多变化和调整，并产生出一些在许多方面与其最初设计截然不同的方言，但是它的中心思想仍然不变，使其成为今天仍在使用的最古老的语言之一，仅次于 Fortran。</p>
<p>  第一个 Lisp 的最终实现发表在 1960 年的 Communications of the ACM (CACM) 上。那一版本的 Lisp 首创了几个至今仍被采纳的语言特性：Lisp 引入了一个条件表达式，后来被其他语言拿去作一般性的 if 语句；它引入了递归和第一类 (first-class) 函数，函数式和其他编程语言的核心成分；它引入了变量的引用语义，若没它的话便不会有面向对象编程语言；它引入了符号表达式，通用和统一的数据和程序的表示形式 (被重新发明成 XML)，后者使得程序可以在应用里进行转换；它很早就在编程语言里引入了垃圾收集机制；并且它甚至已经有了一个元数据组合以及基于符号和属性列表的动态派发机制。</p>
<p>  Lisp 无疑是计算机科学史上最具影响力的编程语言之一：Timothy Hart 在 1960 年代为 Lisp 增加了宏；Warren Teitelman 在 60 年代发明了一个 advice 机制，成为了面向对象 (aspect-oriented) 编程的最早先驱；Carl Hewitt 将 Lisp 作为一个开发回溯 (逻辑编程的本质) 和其他 actor 模型的平台；Alan Kay 也承认 Lisp 对于 SmallTalk 的重要影响，后者是第一个明确的面向对象编程语言；Brian Smith 开发了第一个基于续延 (continuation-based) 的 Web 应用；直到今天 Lisp 仍处在即将到来的 Web 3.0 的前沿。</p>
<p>  我们想着庆祝Lisp的50岁生日。而OOPSLA 2008恰是举办这样一场庆祝活动的绝佳场所，因为面向对象编程从Lisp思想中受益匪浅，况且OOPSLA 2008是在10月份举行的，这正好是Lisp问世的50年后。</p>
<p>  John McCarthy已同意做一个关于Lisp早期历史的演讲，他曾在OOPSLA 2007上做了演讲此番再回到了OOPSLA。Guy Steele 和 Richard Gabriel 将展现一组不同寻常的幻灯片，重复他们关于1992年以来Lisp发展的HOPL-II演讲。Pascal Costanza 将谈论Lisp社区最近的发展，这个社区在经历了人工智能的冬天之后，迎来了令人惊讶的复苏。我们将邀请其他有影响力的Lisp，介绍过去50年里Lisp发展的重要方面。最后，我们将举行一个关于Lisp未来50年的公开小组讨论。</p>
<p>  OOPSLA 2008将于10月19日至23日在美国田纳西州的纳什维尔举行。OOPSLA是全世界面向对象编程的主要年度会议，20余年来一直吸引着该领域数最优秀的人才。更多关于OOPSLA 2008的信息，请访问http://oopsla.org 。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Self-Driving Car. 漫談人工智能（更新中）]]></title>
        <id>https://alaskasquirrel.github.io/post/self-driving/</id>
        <link href="https://alaskasquirrel.github.io/post/self-driving/">
        </link>
        <updated>2020-05-24T19:14:54.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>（封面 https://www.landmarkdividend.com/self-driving-car/）</li>
</ul>
<p>學習：👹<br>
&lt; The Quest for Artificial Intelligence&gt;Nils Nilsson 2010 &amp; 介绍早期人工智能<br>
<a href="https://www.zybuluo.com/hanbingtao/note/433855">韩炳涛: 零基础入门深度学习系列</a><br>
<a href="https://lexfridman.com/">Lex Fridman</a><br>
<a href="http://speech.ee.ntu.edu.tw/~tlkagk/">李宏毅 Hung-yi Lee</a><br>
<a href="https://colah.github.io/">Christopher Olah</a><br>
<a href="https://www.52nlp.cn">我爱自然语言处理</a><br>
<a href="https://ruder.io/">Sebastian Ruder</a><br>
<a href="https://www.henryailabs.com">Henry AI Labs</a><br>
<a href="https://www.nature.com/articles/s41599-020-0494-4">Why general artificial intelligence will not be realized</a><br>
<a href="https://www.theatlantic.com/magazine/archive/2013/11/the-man-who-would-teach-machines-to-think/309529/">The Man Who Would Teach Machines to Think</a><br>
&lt; The Logical Road to Human Level&gt;John McCarthy 2005<br>
&lt; What is Artificial Interlligence?&gt;John McCarthy 2007<br>
<a href="https://deepmind.com/blog/">DeepMind</a><br>
<a href="https://openai.com">OpenAI</a><br>
<a href="https://www.fast.ai/">Fast.AI</a></p>
<p>🤖 至于我这样不考驾照的人，自动驾驶简直福音，尤记得第一次听晓GoogleWaymo时的激动不已，此后再面对劝考驾照的人，终有所说词啦。<br>
  万万未想到索尼竟会推出<a href="https://www.sony.net/SonyInfo/vision-s/">Sony Vision-S</a>，官方说明: corresponds to Level 2+driver assistance. 基于33个感测器的安全方案，利用支持HDR的高分辨率<a href="https://www.sony.net/SonyInfo/technology/stories/IMX490/">CMOS</a>影像传感器(路面、物体侦测、色彩识别)、固态LiDAR(日间、夜间视觉和物体探测)和ToF感测器(辨别车内外人、物)为车辆提供360度的全方位保护。(注：CMOS全球份额多半被索尼占据)<br>
Camera：(https://www.sony.net/SonyInfo/vision-s/safety.html)<br>
<img src="https://alaskasquirrel.github.io/post-images/1596531855435.bmp" alt="" loading="lazy"><br>
Radar / Ultra Sonic: (https://www.sony.net/SonyInfo/vision-s/safety.html)<br>
<img src="https://alaskasquirrel.github.io/post-images/1596531468337.bmp" alt="" loading="lazy"><br>
Solid State LiDAR: (https://www.sony.net/SonyInfo/vision-s/safety.html)<br>
<img src="https://alaskasquirrel.github.io/post-images/1596531484340.bmp" alt="" loading="lazy"></p>
<figure data-type="image" tabindex="1"><img src="https://alaskasquirrel.github.io/post-images/1594375460765.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://alaskasquirrel.github.io/post-images/1594322160914.gif" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://alaskasquirrel.github.io/post-images/1594322178933.gif" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://alaskasquirrel.github.io/post-images/1594322191191.gif" alt="" loading="lazy"></figure>
<p>Reference:</p>
<ul>
<li>图片 https://www.thesimpledollar.com/insurance/auto/how-self-driving-cars-work</li>
<li>https://www.tesla.com/autopilot</li>
<li><a href="https://www.sony.net/SonyInfo/vision-s/">Sony Vision-S</a></li>
<li>https://blogs.nvidia.com/blog/2019/04/15/how-does-a-self-driving-car-see/</li>
<li><a href="https://spectrum.ieee.org/transportation/self-driving/selfdriving-cars-learn-to-read-the-body-language-of-people-on-the-street">Self-Driving Cars Learn to Read the Body Language of People on the Street</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[翻译] History of Symbolics lisp machines]]></title>
        <id>https://alaskasquirrel.github.io/post/history-of-symbolics-lisp-machines/</id>
        <link href="https://alaskasquirrel.github.io/post/history-of-symbolics-lisp-machines/">
        </link>
        <updated>2020-05-23T16:39:55.000Z</updated>
        <content type="html"><![CDATA[<p>原文：<a href="https://danluu.com/symbolics-lisp-machines/">History of Symbolics lisp machines</a>. This is an archive of Dan Weinreb's comments on Symbolics and Lisp machines.<br>
译文：</p>
<h3 id="rebuttal-to-stallmans-story-about-the-formation-of-symbolics-and-lmi">Rebuttal to Stallman’s Story About The Formation of Symbolics and LMI</h3>
<p>  多年来，Richard Stallman 一直在讲述一个关于Lisp Machine 公司的起源，以及它对 M.I.T Artificial Intelligence Lab 影响力的故事。他将其发表在一本书和一篇被广泛引用的论文中，您可以在 https://www.gnu.org/gnu/rms-lisp.html 上找到这篇论文。<br>
  Richard Stallman 的叙述有很大的偏见，在很多地方完全错误。以下是我对实际发生的事情的看法。<br>
  Richard Greenblatt 提议成立Lisp Machine 公司的两个前提。首先，不应该有外部投资（这是完全不现实的: 一家制造计算机硬件的公司需要资金）。其次，Richard Greenblatt 本人将担任CEO。Lisp Machine 项目的其他成员对 Greenblatt 管理公司的能力深为怀疑。于是，Richard Greenblatt 和其他人分道扬镳，成立了两家公司。<br>
  Stallman 将其描述为“暗箭伤人”，并认为 Symbolic 绝非 &quot;肆无忌惮&quot;，这纯粹是废话。这里没有任何的背后中伤。Symbolics 是极其严谨的。Stallman对于Symbolics的描述”寻求摧毁“LMI，这纯粹是幻想。<br>
  Stallman 声称 Symbolics &quot;雇佣了所有黑客&quot;，&quot;致使MIT AI Lab 无人可用&quot;,&quot;没人预想到AI Lab 的黑客团队就此消失&quot;，Symbolics ”消灭了MIT“。首先，仅此一家Lisp Machine 公司便如Stallman所料了，这些人终将离开 AI Lab。其次，Symbolics 仅仅从 AI Lab雇佣了四名全职和一位兼职人员(见下文)。<br>
  Stallman 接着说:“Symbolics 想出了一个计划。他们对 AI Lab说，‘我们会继续对系统进行修改，供你们使用，但你们不能把它放进MIT Lisp machine 系统。相反，我们将允许您访问Symbolics的Lisp machine系统，您可以运行它，但这就是您所能做的。’”换句话说，Symbolics开发的软件并不是免费提供给LMI的。这有那么令人惊讶吗?无论如何，这不是Symbolics的“计划”;这是MIT许可协议的一部分，与LMI签署的协议完全相同。LMI的改变也都是LMI专有的。<br>
  接着，他说:“过了一段时间，我得出了一个结论，那就是我甚至不去看他们的代码都是最好的。当他们发布了一个beta版的公告并给出了发布说明时，我会看看有哪些特性，然后去实现它们。等到他们发布真正的版本时，我也这么做了。“首先，他真的在看Symbolics代码;我们发现他做了好几次。其次，即使他没有，复制别人已经设计的东西也比自己设计要容易得多。他复制的是增量改进:这里有一个新的编辑器命令，那里有一个新的Lisp实用程序。这只是Symbolics公司软件开发的一小部分。<br>
  他将此描述为“惩罚”Symbolics 是愚蠢的。他所做的对Symbolics没有任何影响。在现实生活中，Symbolics很少与LMI竞争销售。LMI的存在与Symbolics的底线关系不大。<br>
  我要澄清的是，最初的(TECO-based)Emacs是由Guy L. Steele Jr.和David Moon创建和设计的。在他们让它工作之后，它已经成为 AI Lab的标准文本编辑器，Stallman接管了它的维护工作。<br>
   以下是Symbolics创始人的名单。请注意，Bruce Edwards 和我曾在MIT AI Lab 共事过，但是在Symbolics创立之前，且他们已离开那里去他处工作了。Henry Baker 并非Stallman 所提记得黑客。</p>
<ul>
<li>Robert Adams (original CEO, California)<br>
Russell Noftsker (CEO thereafter)<br>
Minoru Tonai (CFO, California)<br>
John Kulp (from MIT Plasma Physics Lab)<br>
Tom Knight (from MIT AI Lab)<br>
Jack Holloway (from MIT AI Lab)<br>
David Moon (half-time as MIT AI Lab)<br>
Dan Weinreb (from Lawrence Livermore Labs)<br>
Howard Cannon (from MIT AI Lab)<br>
Mike McMahon (from MIT AI Lab)<br>
Jim Kulp (from IIASA, Vienna)<br>
Bruce Edwards (from IIASA, Vienna)<br>
Bernie Greenberg (from Honeywell CISL)<br>
Clark Baker (from MIT LCS)<br>
Chris Terman (from MIT LCS)<br>
John Blankenbaker (hardware engineer, California)<br>
Bob Williams (hardware engineer, California)<br>
Bob South (hardware engineer, California)<br>
Henry Baker (from MIT)<br>
Dave Dyer (from USC ISI)<br>
<img src="https://alaskasquirrel.github.io/post-images/1594056215160.jpg" alt="" loading="lazy"></li>
</ul>
<h3 id="why-did-symbolics-fail">Why Did Symbolics Fail?</h3>
<p>  在此前的一篇博文的评论中，有人问我为什么Symbolics失败。下面的内容过于简单，但应该足够好了。我非常欢迎老朋友发表评论，并对其进行修改或添加，当然也邀请每个人发表评论。<br>
  首先，请注意在1980年左右Symbolics开始出现的时候，多数的计算机用户使用分时系统。一个人拥有一台完整的电脑的想法是大胆的，几乎是异端邪说。每家电脑公司(Prime、Data General、DEC)都有自己的硬件和软件套件。那时没有pc，没有Mac，没有工作站。MIT AI Lab，15名研究人员共享一台CPU为0.0001 GHz、主存为0.0002 GB的计算机。<br>
  Symbolics销售给两种类型的客户，我称之为主要客户和次要客户。主要客户使用 Lisp Machine 作为软件开发环境。最初的目标市场是MIT AI Lab自己，随后是类似的机构:大学、企业研究实验室等等。次要客户使用Lisp machine运行由其他方编写的应用程序。<br>
  我们在主要客户中取得了巨大的成功。我想如果我们的市场营销做得更好的话，我们会创造更多这样的产品。例如，您是否知道Symbolics为Fortran、C、Ada和其他流行语言提供了世界级的软件开发环境，在编辑器中具有惊人的语义理解能力、强大的调试器、语言之间相互调用的能力等等?我们在这上面花了很多功夫，但从来没有宣传过。<br>
  但我们知道，真正成功的唯一途径是开发二级市场。ICAD制作了一个先进的基于约束的计算机辅助设计系统，该系统只在Symbolics机器上运行。可悲的是，他们是唯一一家这样做的公司。为什么?<br>
  世界改变很快。新的“工作站”类型的计算机出现了:Suns和Apollos等等。实现Lisp的新技术被发明，它允许好的Lisp实现在传统的硬件上运行;虽然不如我们的好，但对于大多数用途来说已经足够好了。因此，我们特殊的Lisp体系结构的真正增值突然减少了。大量有用的Unix软件出现了，并且在Unix工作站之间是可移植的:每个供应商不再需要开发整个软件套件。而工作站厂商也开始利用 Intel、Motorola和IBM生产的速度越来越快、价格越来越便宜的CPU，Symbolics很难跟上这些厂商的步伐。我们对这一点承认得很慢。我们相信自己的“教条”，即使它变得不那么真实。它根植于我们的企业文化中。如果你提出异议，你的同事会觉得你“就是不明白”，可以说你不是“家族”中的一员。这抑制了客观分析。(这是一个很容易陷入的问题——不要让它发生在你身上!)<br>
  二级市场经常有他们需要使用工作站(后来是PC)硬件的原因。他们通常需要与其他不能在Symbolics运行的软件进行交互。或者他们想要与其他没有在Symbolics上运行的应用程序共享硬件成本。与“通用”Unix工作站(以及后来的Windows pc)相比，Symbolics machine 被视为“特殊用途的硬件”。它们价格昂贵，但不能用于越来越多的Unix软件。很少有厂商想要制造一种只能在“专用硬件”上运行的产品。(谢谢,ICAD;我们爱你!)<br>
  而且，许多Symbolics的销售都是基于基于规则的专家系统的承诺，早期的例子是用Lisp编写的。基于规则的专家系统是一个很好的东西，目前得到了广泛的应用(但通常不在Lisp中)。但是它们被某些学者和他们的行业大肆宣传，导致了1988年前后的巨大反弹。“人工智能”失宠;“冬天”来临。<br>
  (Symbolics确实推出了自己的努力，为PC生产一种名为CLOE的Lisp，并且还与其他Lisp公司合作，特别是Gold Hill，这样客户就可以在Symbolics上开发并部署在传统的机器上。我们不是完全愚蠢的。最重要的是，人们对Lisp的兴趣下降太多了。)<br>
  与此同时，在Symbolics公司，出现了巨大的内部管理冲突，导致很多高层管理人员辞职，他们被董事会取代，取而代之的是新CEO，这些CEO表现不佳，也没有远见了解发生了什么。Symbolics公司签下了大型新办公室和新工厂的长期租约，预期增长并未到来，但由于办公空间过剩，耗费了大量资金，无法转租这些物业。有几轮裁员。我们中越来越多的人意识到发生了什么，而Symbolics并没有反应。在为Lisp创建了一个名为Statice的面向对象数据库系统之后，我在1988年和几个同事离开，成立了Object Design, Inc.，为全新的主流面向对象语言c++创建了一个面向对象的数据库系统。(该公司非常成功，目前作为Progress Software的ObjectStore分部存在(www.objectstore.com)。我期待着明年夏天的二十年同学会。)<br>
  Symbolics确实试图处理这种情况，首先通过制造可以连接到传统计算机的插件板 Lisp machine。一个问题是，他们一直押错了赌注。MacIvory是Symbolics Ivory芯片(是的，我们自己做CPU芯片)，可以插入到Macintosh上的NuBus(早就没了,且不是主流平台)。后来，他们最终放弃了与大型芯片制造商的竞争，转而使用一家主要制造商的快速芯片制造了插电板:DEC Alpha架构(被HP/Compaq淘汰了，应该使用英特尔)。这时，一切都太微不足道，太迟了。<br>
  此前一篇博文引用了Eve Philips的一篇MIT硕士论文(参见http://www.sts.tu-harburg.de/~r.f.moeller/symbolics-info/ AI -business.pdf)，评论文章的人称之为“如果它成功了，它就不是AI:人工智能创业的商业观察”。这是我第一次听说它，但显然她得到了Tom Knight的帮助，Tom Knight是Symbolics的另一位联合创始人，他比我更了解Symbolics的历史，让我们看看她怎么说。<br>
  这看起来很棒。值得一读!她绝对知道自己在说什么，而且读起来很有趣。它给我带回了很多过去的回忆。如果你曾经想要创建一个公司，你可以从阅读像这里一样的“战争故事”中学到很多。<br>
  下面是我阅读时的一些评论。这篇论文的大部分内容都是关于人工智能软件供应商的，但他们的命运对Symbolics有着强烈的影响。<br>
   另一方面，美国国防部高级研究计划局在80年代末削减资金的事实是非常重要的。Symbolics的许多主要市场客户得到了DARPA的资助。<br>
  是的，基于规则的专家系统取得了一些令人兴奋的成功。美国运通公司的“授权人助理”，帮助与您通话的人确保您没有使用美国运通卡，该公司在Symbolics的机器上运行。我在这里了解到，它有45-67%的内部投资回报率，这是非常令人印象深刻的。<br>
  这篇论文有一个时代错误:“提供语言的大型软件公司(即微软)很少提供任何形式的Lisp支持。“这些事件发生时，微软的统治地位已经是几年前的事了。例如，还记得1990年发布的第一个可行的Windows O/S 3.1版本吗?但她的总体观点是正确的。<br>
   她说:“人工智能社区非常傲慢，认为Lisp会改变世界各地计算机系统的运行方式，这并非完全没有道理。这绝对是真的。它并没有听起来那么错误:Lisp的许多想法已经成为主流，特别是managed(garbage-collected)storage，Lisp在面向对象编程方面获得了一些赞誉。毫无疑问，Lisp对Java和c#有着巨大的影响。值得注意的是，微软的公共语言运行时技术目前是由Patrick Dussud领导的，他是第三家MIT-Lisp-machine公司德州仪器的主要Lisp专家。<br>
  但那时候我们真的相信Lisp。我们只对那些试图用C写一个专家系统的人表示蔑视;这是我们企业文化的一部分。我们确实认为Lisp会“改变世界”，就像“六十年代”的人们认为“和平、爱和欢乐”可以改变世界一样。但这并不容易。<br>
  这提醒了我，我对Richard Gabriel所著的<Patterns of Software: Tales from the Software Community>这本书再怎么推荐也不为过，这本书讲述了技术从实验室走向市场的过程。Gabriel是五个主要的 Common Lisp 设计师之一(还有Guy Steele、Scott Fahlman、David Moon和我自己)，但这里的重点远远超出了Lisp。这是以他最初的“Worse is Better”开始的一系列论文的高潮。这里的思想要发达得多。他的见解独特且极具说服力。<br>
  好了，回到Eve Philips:在第五章她描述了“人工智能硬件产业”，从MIT的Lisp machine开始。她做对了吗?她说“14名 AI Lab 黑客加入了他们”;请参阅我之前关于这个数字的文章，但在上下文中，这是一个非常小的问题。故事的其余部分是正确的。(她甚至提到了我上面指出的房地产问题!)她也充分展示了Symbolics 管理和营销的弱点。这是一件优秀的作品。<br>
  Symbolics 是非常有趣的。我们有一段时间非常成功，然后上市了。我的同事是一些技术娴熟、讨人喜欢的技术人员，你可能永远都希望与他们一起工作。我从他们身上学到了很多。我怎么也不会错过的。<br>
  离开后，我以为再也见不到Lisp了。但是现在我发现自己在ITA软件公司，在那里我们正在编写一个巨大的、复杂的事务处理系统(一个新的航空预订系统，最初是为加拿大航空公司开发的)，其核心是Common Lisp。几乎可以肯定，我们拥有世界上最大的公共Lisp程序员团队。我们的开发环境还不错，但我真的希望我能再拥有一台Lisp机器。</p>
<h3 id="more-about-why-symbolics-failed">More about Why Symbolics Failed</h3>
<p>  <a href="http://www.sts.tu-harburg.de/~r.f.moeller/symbolics-info/Symbolics.pdf">Symbolics, Inc: A failure of heterogeneous engineering</a> Alvin Graylin, Kari Anne Hoir Kjolaas, Jonathan Loflin and Jimmie D. WakerIII<br>
  这是一篇优秀的论文，如果对于Symbolics有什么感兴趣，这是必读的。<br>
  这篇论文的论点基于一个名为“heterogeneous engineering”的概念，但除了“运营好一家公司”之外，很难理解他们所说的异质工程是什么意思。他们有很好的方式说你不能只做技术，你必须做市场，销售，财务等等，这是很明显的。他们对Symbolics 的长期愿景有着广泛的不同感受，这是非常正确的，我应该在我的文章中提到这是Symbolics 的最大问题之一。研发的随机变动，常常与公司的其他部门不协调，在这里得到了很好的描述(他们有很好的资源，包括来自Dave Moon 的许多具有特色的、非常诚实的电子邮件)。公司在马萨诸塞州剑桥市的软件部门和位于加州伍德兰山(后来的查兹沃斯)的硬件部门之间的分离也是一个真正的问题。他们说，“一旦资金可用，Symbolics 的花钱就像彩票中奖者和新发现的财富一样”，这是绝对正确的。特性蔓延确实非常猖獗。该论文还提供了一些Symbolics 的财务数据，这些数据很有趣，也很有启发性，显示出1986年的稳步增长，1987年至1989年的收入下降，收入为负。<br>
  这里有一些我不同意的观点。他们表示，“在公司发展的这些年里，Symbolics一直在寻找一位首席执行官”，最终聘请了Brian Sear。我敢肯定，那只是在麻烦开始的时候才发生的。我不同意Brian Sear所说的我们没有照顾到我们现有的客户; 我们在这方面确实很努力，我想这也是很多曾经的Symbolics客户如此怀旧的原因之一。我不认为Russell说的“许多Symbolics Machine 是由研究人员通过星球大战计划资助购买的”是正确的，他们多次重复这一点。然而，许多项目是由美国国防部高级研究计划局资助的，如果你用它来代替所有关于“星球大战”的说法，那么他们说的就是对的。“LISP machine的激增可能已经超过了LISP程序员的激增”的说法是夸张的。没有人想到比研究人员更广阔的市场，这不是真的; 相反，我们打算销售给增值经销商(VAR)和原始设备制造商(OEM)。“VARs and OEMs”这句话实际上是一句咒语。不幸的是，我们只做了一次(ICAD)。虽然他们认为 Sun machines“可以用于许多其他应用程序”是正确的，但有趣的是原因:为什么Sun machine 有许多可用的应用程序?Unix作为可移植平台的兴起(这在当时是一个新概念)和Sun的价格有很大关系。他们不考虑Apollo失败的原因<br>
  感谢各位读者!</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[能源变革，悄无声息]]></title>
        <id>https://alaskasquirrel.github.io/post/earth/</id>
        <link href="https://alaskasquirrel.github.io/post/earth/">
        </link>
        <updated>2020-05-23T13:03:03.000Z</updated>
        <content type="html"><![CDATA[<p>(封面 https://pixabay.com/）<br>
<a href="https://worldpopulationreview.com">World Population Review</a></p>
<ul>
<li>据Fraunhofer 研究所的报告，2018年德国可更新能源的发电量首次超过了煤炭发电。德国作为欧洲最大的经济体，原定到 2030 年由可更新能源提供 65% 的电力，且预到 2022 年完全退出核能，并计划逐步淘汰煤炭。研究显示，去年德国太阳能、风能、生物质能和水电产生了 219 TWh 的电力，占到了总发电量 542 TWh 的四成以上，超过了煤炭的 38%。研究人员认为 2019 年可更新能源的发电量同样不会低于四成。</li>
<li>2019年6月，英国国家电网表示，本年前五个月，来自清洁能源发电量占到了 48% ，超过了煤炭和天然气的 47%，其余是生物质燃烧。英国国家电网称，煤炭的发电量过去十年从 30% 降至了 3%，而风能从 1% 提高到 19%。同时英国还从欧洲大陆进口了一部分电，主要来自法国核电。英国估计到 2030 年清洁能源来源将占到九成。</li>
<li>2020年6月10日，到周三的午夜，英国已经两个整月没有用燃煤发电。而在十年前，英国四成的电力来自煤炭，新冠是故事的一部分，但不是全部。为遏制疫情快速扩散，英国实施了封锁政策，电力需求大幅下跌，国家电网随后从电网中下线了部分发电厂，而英国最后的 4 座燃煤发电厂是首当其冲遭到关闭的。最后的燃煤发电站离线是在 4 月 9 日午夜，无火电的情况一直持续至今。十年前，英国 3% 的电力来自风力和太阳能，今天英国有着世界规模最大的离岸风电行业。十年前的英国最大燃煤发电厂如今已经转向了压缩木球。</li>
<li>受新冠疫情的影响，美国可更新能源发电量今年有望首次超过燃煤火电。这一结果在十年前是无法想象的，当时美国的电力需求近半是由火电供应。随着风力电场和太阳能的建造成本降低，经济力量驱动了火电的减少，疫情更是将美国的煤电行业推入深渊。为遏制病毒的扩散，美国的经济活动大幅下降，工厂、零售商、办公楼纷纷关闭，电力需求相应的也大幅减少，由于煤电的运营成本比燃气和可更新能源更高，电力公司因此关闭了燃煤发电厂。今年已经有 90 天美国的风电、太阳能和水电发电量超过了煤电。在过去十年里，可再生能源的成本急剧下降，一直超过专家的预期。从2009年到2019年，风力发电的成本下降了70%，而大型太阳能的成本下降了近90，2010年到2019年，太阳能电池成本也下降了近90%。<br>
<img src="https://alaskasquirrel.github.io/post-images/1594469598317.jpg" alt="" loading="lazy"><br>
图为美国国家可再生能源实验室的年度技术基准(ATB)对未来风能和太阳能的成本预测。从图中可以看出，风能和太阳能发电的成本下降速度一直都过预期。(https://www.2035report.com/)<br>
<img src="https://alaskasquirrel.github.io/post-images/1594470068960.jpg" alt="" loading="lazy"></li>
</ul>
<p>消息来源：</p>
<ul>
<li>https://www.reuters.com/article/us-germany-power-renewables/renewables-overtake-coal-as-germanys-main-energy-source-idUSKCN1OX0U2</li>
<li>https://www.bbc.com/news/science-environment-48711649</li>
<li>https://www.bbc.com/news/science-environment-52973089</li>
<li>https://www.nytimes.com/2020/05/13/climate/coronavirus-coal-electricity-renewables.html</li>
</ul>
<p>悄无声息：</p>
<ul>
<li><a href="https://spectrum.ieee.org/energy/nuclear/too-cheap-to-meter-nuclear-power-revisited">After 50 years of operation, nuclear electric generation is still having teething pains</a></li>
<li><a href="https://spectrum.ieee.org/energywise/energy/nuclear/a-double-first-in-china-for-advanced-nuclear-reactors">Safer reactors designed in the U.S. and Europe make their power grid debuts in China</a></li>
<li><a href="https://thebulletin.org/2019/12/good-news-for-climate-change-india-gets-out-of-coal-and-into-renewable-energy/">Good news for climate change: India gets out of coal and into renewable energy<br>
</a></li>
<li><a href="https://thebulletin.org/2013/06/nuclear-aging-not-so-graceful/">Nuclear aging: Not so graceful<br>
</a></li>
<li><a href="https://chinadialogue.net/en/energy/5808-chinese-nuclear-disaster-highly-probable-by-2-3/">Chinese nuclear disaster “highly probable” by 2030<br>
</a></li>
<li><a href="https://www.theguardian.com/world/2015/may/25/china-nuclear-power-plants-expansion-he-zuoxiu">China warned over 'insane' plans for new nuclear power plants<br>
</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kurt Gödel ( 1906 - 1978 )]]></title>
        <id>https://alaskasquirrel.github.io/post/KurtGödel /</id>
        <link href="https://alaskasquirrel.github.io/post/KurtGödel /">
        </link>
        <updated>2020-05-21T16:03:43.000Z</updated>
        <content type="html"><![CDATA[<p>  与大多数数学结果不同的是，哥德尔的不完备性定理并不是用符号或数学公式表述，虽然证明的细节艰深而富有技巧性，让人高兴地是证明的整体策略却不难。在所有让人眼花缭乱的公式结束后，两个结论可以用多少比较浅白的语言表述出来，《哲学百科全书》中“哥德尔定理”一文以对这两个定理清晰的阐释开始：(J. van Heijenoort, The Encyclopedia of Philosophy, Vol 3, 编辑, Paul Edwards ( New York: Macmillan Publishing Co. ,Inc. ,and the Free Press, 1967 ),pp. 348~349.)</p>
<ul>
<li>哥德尔定理通常意指以下陈述：</li>
<li>任何足以包含初等数论的形式系统中都存在不可判定的命题——即，命题即不能被证实也不能被证伪。（这个陈述有时候也被称为哥德尔第一定理。）</li>
<li>这个定理的一个推论是任何足以包含初等数论的形式系统的一致性不能在这个系统内部被证明。（这个推论就是哥德尔定理；有时候也被称为哥德尔第二定理。）</li>
<li>这稍微有些含糊的陈述是哥德尔1931年在维也纳发表的结果的简要阐释。(Uber formal unentscheidbare Satze der Principia mathematica und verwandter Systeme I ,(1931). Kurt Godel Collected Works: Volume I Publications 1929-1936 . p144. )</li>
</ul>
<h3 id="minds-and-machines">Minds and Machines</h3>
<ul>
<li>逻辑之旅：从哥德尔到哲学 . 王浩. 第6章 - 心灵与机器：论可计算主义. p231.<br>
  可以设想(虽然远远超过今日科学的界限)，脑生理学将发展到这样的高度，让人们能够在经验上肯定：(1) 人脑足以理解所有的心智现象，它在图灵的意义上就是一台机器; (2)人脑进行数学思维的部分，其物质构造何生理功能不外是如此一般。—— 哥德尔，吉布斯 演讲，1951年.</li>
<li>'From Mathematics to Philosophy' 王浩, 1974，P324.<br>
  In Godel’s opinion (as set forth in the unpublished 25th Josiah<br>
Willard Gibbs Lecture13 delivered by him at Providence on Decem­<br>
ber 26, 1951) the two most interesting rigorously proved results<br>
about minds and machines are these:<br>
  1 The human mind is incapable of formulating (or mechanizing)<br>
all its mathematical intuitions. I.e.: If it has succeeded in formulating<br>
some of them, this very fact yields new intuitive knowledge, e.g. the<br>
consistency of this formalism. This fact may be called the‘incom-<br>
pletability’ of mathematics. On the other hand, on the basis of what<br>
has been proved so far, it remains possible that there may exist (and<br>
even be empirically discoverable) a theorem-proving machine which<br>
in fact is equivalent to mathematical intuition, but cannot be proved<br>
to be so, nor even be proved to yield only correct theorems of finitary<br>
number theory.<br>
  2 The second result is the following disjunction: Either the human<br>
mind surpasses all machines (to be more precise: it can decide more<br>
number theoretical questions than any machine) or else there exist<br>
number theoretical questions undecidable for the human mind.</li>
</ul>
<h3 id="纪志刚-2003年1月-感悟哥德尔">纪志刚  2003年1月 <a href="http://shc2000.sjtu.edu.cn/030104/ganwu.htm">感悟《哥德尔》</a>：</h3>
<p>  有一个人曾在不到两年的时间内让数学界感受了大喜与大悲的经历，他就是哥德尔（Kurt Gödel, 1906.4.28 - 1978.1.14）。<br>
　　1929年秋，哥德尔在他的博士论文中证明了一阶逻辑的完全性，这对于当时试图以“公理化”方法构建数学基础的形式主义学派是一个莫大的鼓舞。希尔伯特，形式主义学派的领军人物，确信他的元数学和证明论将会成功地确立全部数学的相容性和完全性。哥德尔的逻辑完全性定理似乎表明曙光就在前头。1930年夏天，柯尼斯堡，康德的诞生地，也是希尔伯特的故乡，在接受“荣誉市民”受礼仪式的演说中，希尔伯特坚定地说出最后一句话：“我们必须知道，我们必将知道（Wir müssen wissen. Wir werden wissen）”。<br>
　　但就在第二年，哥德尔发表的另一篇论文却打开了“潘多拉的盒子”。这篇题为《论〈数学原理〉及有关系统的形式不可判定命题》（1931年）的论文包含了两个惊世骇俗的结论，其中对数学界尤具毁灭性的断言是：任何数学系统，只要其能包含整数的算术，其相容性就不可能通过几个基础学派（逻辑主义学派、形式主义学派、集合论公理化学派）采用的逻辑原理建立。希尔伯特的幻想破灭了，数学的“灾难”降临了！有人悲叹地说：“上帝是存在的，因为数学无疑是相容的；魔鬼也是存在的，因为我们不能证明这种相容性。”（外尔）<br>
  哥德尔的影响是深远的，最新的一个例子足以说明。2002年夏天北京国际数学家大会，霍金的报告就是《哥德尔与Ｍ理论》。在当今国际物理研究领域，很多科学家提出有可能存在一个能描述一切物理现象的理论，并把这一理论称为超弦理论。霍金认为，建立一个单一的描述宇宙的大统一理论是不太可能的。霍金说他的这一推测正是基于数学领域的哥德尔不完全性定理。<br>
　　可是，哥德尔却一直是一位被神秘所笼罩的传奇人物。他的生活特异独行，超然遁世，他的思想沉奥深邃，意蕴广远。我们中的很多人也许是读了侯世达（Hofstadter,D.R.）的《哥德尔、艾舍尔、巴赫—集异璧之大成》（《GEB—一条永恒的金带》是该书节译本）了解哥德尔的。其实，这部奇书在哥德尔的头上增添了更神秘的光环。感谢王浩先生，他的《哥德尔》（Reflections on Kurt Gödel ,1987，1991，康宏魁译，上海世纪集团出版社，上海译文出版社，2002年9月第1版）一书使我们终于可以走近哥德尔，去感受那平凡躯体下伟大而真诚的心灵。<br>
　　哥德尔的与众不同表现在他的思想、他的关注、他的生活格调、他内心深处的精神世界。王浩先生正是从献身基本理论的角度展开哥德尔的生平的。值得注意的是王浩先生首先将焦点聚集在与哥德尔生平和事业密切相关的三样重要的史料（哥德尔哥哥答复王浩的回信、格兰琼专为哥德尔设计的生平调查表、哥德尔获得洛克菲勒大学荣誉学位时王浩的引荐辞）。正是在许多珍贵史料基础上，王浩为我们仔细勾画了哥德尔毕生事业的全貌。似乎是历史的巧合，当哥德尔几经周折从维也纳抵达普林斯顿后，与爱因斯坦成了结交10年以上的好友。王浩先生巧妙地“假道爱因斯坦”，以对比的手法，描述了两位智者的友谊以及他们在物理、逻辑、哲学、政治、艺术甚至宗教上思想与见解。这样就为读者通达哥德尔的精神思想打开了一条便道。<br>
　　哥德尔的科学工作令人赞叹，这也是王浩先生着力描写的重点。可是，照哥德尔自己说，他一生用于哲学的时间和精力比用于科学的还要多。在哲学中，哥德尔所推崇的5种好品格“善取舍、求准确、弃偏见、慎试验、有胆魄” 确实令人动心。哥德尔的博大视野与敏锐眼光还在他对科学、技术与社会的评述中显示出来。书中披露哥德尔在1962年就指出“人类并不会因为登上月球就有所改进。这必定跟‘自然’科学与‘精神’科学之间的老冲突有关。……如果史学、法权与国家学说、哲学、心理学、文学、艺术等等的进展像物理学那么大，原子战争的危险就不会有了。”读书至此怎能不掩卷感慨！诚可谓“哥德尔的事迹发人深省，其意境超乎学院天地，实在得有一种能顾盼几个世纪的历史眼光才行。”<br>
　　作者王浩先生是著名的数理逻辑学家，早年在西南联大时就自学过哥德尔的初等逻辑完全性证明。后来与晚年的哥德尔频繁往来，广泛交谈，亲笔录下为数可观的口头资料。在他的笔下一个栩栩欲活、个性丰满的哥德尔跃然于纸上。在书中我们看到哥德尔生活的简朴、对荣华富贵的淡漠、做学问的坚韧刻苦、寻求根本原理的矢志不移和锲而不舍。<br>
　　哥德尔处在另一时代，另一环境，他的专深研究也难免让常人觉得高不可攀。那么《哥德尔》对当代青年的意义何在呢？王浩先生“中译本序”的一段话是很有意义的：<br>
　　我想，译者的苦心是盼望一些有识有志的青年人拿他当一面镜子，学会净化自我，学会在荆棘丛中踏出自己该走的路，不论其所爱好的是艺术还是科学、是文科还是理科。哥德尔成功的事实还提醒我们，一个人天赋再高，想获得一点真重要真耐久的成绩，必须对外界诱惑保持清醒的头脑，永不懈怠地埋头苦干，靠众人的喝彩、神秘的灵感或不诚实的手段根本做不到。<br>
　　王浩先生1995年5月病逝于纽约。当我们阅读《哥德尔》的事迹，回味王浩先生的忠告，必然会有一种超然的感悟。</p>
<h3 id="数学是不可完全的哥德尔的哲学手稿-by-刘晓力">数学是不可完全的——哥德尔的哲学手稿             by 刘晓力</h3>
<p>  在20世纪逻辑学家和数学家行列中哥德尔是一位具有传奇色彩的人物。他所作的三大数学贡献的每一项结果对数理逻辑各分支的发展都是决定性的。自1931年哥德尔不完全性定理之后，数学基础逐渐演变为数理逻辑各分支的精细研究，同30年代前人们都关心基础研究的状况形成对照，数理逻辑愈益成为少数数学家的专门技术领域。可以不夸张地讲，哥德尔使数理逻辑发生了革命，哥德尔规定了我们这个时代数学基础研究的思维内涵。然而，长期以来鲜为人知的事实是，哥德尔不仅是一位伟大的逻辑学家、数学家，还是一位深刻的哲学家。在整个学术生涯中，他只有1929—1942年主要从事数学和数理逻辑的研究，从1942年直到1978年逝世，除了继续集合论问题思考并倾注5年时间热衷于相对论外，几乎大部分时间致力于哲学研究。<br>
  哥德尔生前只发表过5篇哲学论文：《罗素的数理逻辑》（1944）、《纪念普林斯顿200周年数学问题会议评论》（1946）、《什么是康托的连续统问题？》（1947）（1964年修订）、《关于相对论与唯心主义哲学之间关系的一点评论》（1949）、《论有穷主义观点迄今未予应用的一种扩充》（1958）（1972年修订），他的大部分思想表达在手稿、通信和私人谈话记录中。1981年哥德尔去世3年后，他的妻子将其遗稿全部捐赠美国普林斯顿研究院。其中包括哥德尔未发表的论文手稿、演讲稿、授课讲义、各类札记和哥德尔自己编号的100多本笔记（注：哥德尔遗稿已由约翰·道森1984年完成编目，分为12类：①私人信件和科学通信；②商业信函和其他信件；③分专题记录的笔记本；④演讲稿和论文手稿；⑤札记和便笺；⑥其他书写模糊的草稿；⑦从小学到大学的学历材料；⑧法律和政治文件；⑨1930—1939年间的财务文件；⑩就医记录；①①照片；①②其他。）。当代最有影响的美国哲学家蒯因说：哥德尔手稿的发现堪称“哲学界一大新闻”，（注：奎因为Kurt G＠①del,Unpublished Philosophical  Essays所写的序言，1995，p.7.）它使世人得以更深刻地了解哥德尔在哲学领域的所思、所想、所为。目前《哥德尔全集》已出版1～3卷，其中1995年的第3卷中收录了他的几篇重要哲学手稿：《数学基础研究现状》（1933）、《关于数学基础的几个基本定理及其哲学推论》（1951）、《数学是语言的句法吗？》（19539）、《从哲学的观点看数学基础的现代发展》（1961）。这几篇手稿无疑提供了哥德尔思想研究珍贵的原始资料。</p>
<ul>
<li>1《数学基础研究的现状》</li>
</ul>
<p>  在应邀为美国数学会1933年年会准备的报告稿《数学基础研究的现状》中，哥德尔首先指出，为数学建构基础的问题由两个不同的方面构成，其一是使数学家一直使用的证明方法归约为最小数目的公理和推理规则；其二是探求这些公理的某种合法性问题，例如，它们是否彼此一致、是否与经验事实一致。依哥德尔之见，第一方面的问题通过数学的“形式化”已经令人满意地部分获解，但第二方面问题的解决其“形势极端不能令人满意”。原因在于，如果像形式主义者那样，以纯形式的观点把数学仅仅看作符号游戏，当然不会产生问题，一旦问到符号的意义时就会面临一系列困难。它们大致归为三类：（1）对非构造性存在的看法；（2）对（任意类型的）类的一般看法；（3）选择公理问题。Kurt G＠①del，Collected Works（简记CW）Ⅲ,p.48.对此三个问题的考察哥德尔引出了他的柏拉图主义数学哲学立场。这种立场显然建立在对形式主义、直觉主义以及罗素无类论的批判基础之上。<br>
  直觉主义者认为，在无穷域中使用排中律导致非构造性存在证明，因此大可质疑。为了消除所有集合论悖论和语义悖论，1905年罗素通过摹状词理论，建立了无类论或分支类型论，并于1910年在与怀特海合著的《数学原理》中作了系统阐述。哥德尔认为“按照这一理论，类永远不能作为真实的对象存在，而且包含这个词项的命题只有被解释成一种形式语句、一种谈论其他事物的方式时才有意义”。因为罗素坚持“禁止恶性循环原则”：“总体不能包含只有通过这个总体，或者涉及，或者预设这个总体才能定义的成员”。数学中符合这一原则的定义称为直谓定义，违反这一原则的称为非直谓定义。<br>
  哥德尔指出，使用无穷域中的排中律不仅产生非构造性存在证明而且导致非直谓定义。这种定义预设了独立于我们的知识和定义而存在的所有性质的总体。如果承认这种预设，非直谓定义方法无可质疑，“刻画一个无穷总体中的特殊元素就像谈论一个城市中的最高建筑物一样无可非议”。（注：Godel,CWⅢ,p.49～50、50.308～309、308～312、322～323、376～379、305.）并且哥德尔断言，“如果把我们的公理解释成有意义的命题，必然预设一种类型的柏拉图主义，它不可能令任何批判的头脑感到满意”。（注：Godel,CWⅢ,p.49～50、50.308～309、308～312、322～323、376～379、305.）况且非直谓定义已经扩大到实数理论中“从未导致任何矛盾”。当然，“如果把性质和总体仅仅看成由定义生成的肯定包含恶性循环”。这里，哥德尔表达的数学柏拉图主义立场是鲜明的，如果把我们的公理解释成有意义的命题，承认非直谓定义，必定预设独立于我们而存在某个总体，就必然要不以人的意志为转移接受一种柏拉图主义。这里所谓“批判的头脑”显然是指布劳威尔和海丁等直觉主义者。仔细阅读1933年报告手稿，通篇都能感受到哥德尔以讥讽的口吻表达他对形式主义和直觉主义的批判。<br>
  哥德尔向来以数学中的柏拉图主义者著称。晚年曾声称从1925年起就是一个数学实在论者。但1933年以前的文献表明他的这种立场并未得以公开的系统阐发。克勒在《哥德尔与维也纳学派：柏拉图主义反对形式主义》中认为，哥德尔从30年代早期就持有坚定的柏拉图主义立场这一结论“没有证据支持”。马丁·戴维斯、菲弗曼、帕森斯都曾提出疑问，认为哥德尔30年代与他中晚年时期所表达的数学哲学立场不一致。（注：C.Parsons,1995,pp.49～50.S.Feferman,1986,见G＠①del,CWI,P.31,CWⅢ,P.40.）然而，就我们的考察表明，哥德尔在1933 年报告中首次给出“柏拉图主义”一词。如果将他30年代早期在某些特殊场合所表达的思想与40年代后公开阐明的观点和手稿中的立场联系起来看，这些怀疑是没有根据的。1933年报告可以看作他在30年代早期就已经采取坚定的数学柏拉图主义立场的明证。同时可以得出结论，从那时起到70年代，哥德尔的思想从未发生重大转折，其强硬的柏拉图主义立场可以说是一以贯之的。</p>
<ul>
<li>2  《关于数学基础的几个基本定理及其哲学推论》</li>
</ul>
<p>  1951年12月6日在布朗大学召开的第25 届吉布斯纪念讲座上哥德尔作了《关于数学基础的几个基本定理及其哲学推论》的报告，着重阐明他的不完全性定理的哲学意蕴。依哥德尔之见，虽然20年过去了，不完全性定理的哲学意义并未获得充分讨论。<br>
  哥德尔首先表述了由定理揭示的他称之为“数学的不可完全性”（incompletability）或“不可穷尽性”（inexhaustability）的深刻本质：第一不完全性定理表明，无论选择什么样的良定义的公理和推理规则的系统，总存在该系统能够表达但由系统的公理和推理规则不能判定的丢番图问题。第二定理表明，对任何良定义的公理和推理规则的系统，如果假定这些公理和推理规则对于导出关于整数的有穷算术是充分的，那么断言该系统一致性的命题是不可证的。哥德尔的论证是，人们不可能建立一个一致的包括初等数论的形式系统并一致地声称，他认识到这个系统的公理和推理规则是正确的而且相信它囊括了全部数学。因为任何一个认为把握了公理和推理规则正确性的人必定承认也把握了它们的一致性，但由不完全性定理，这些公理的一致性在该系统中不可证。因此这个人就在承认他把握了在这个系统中不可证的某些东西的真理性，也就必然得出这个系统没有包括全部数学，即数学是不可完全的。（注：Godel,CWⅢ,p.49～50、50.308～309、308～312、322～323、376～379、305.）<br>
  哥德尔还考虑了某些人由不完全性定理可能得出如下错误推论：人类心智等价于一台有穷机器，而且还是一台不能完全理解它自身功能的机器。而他认为由不完全性定理，如下数学上的选言命题才是必然推论：或者在下述意义上数学是不可完全的：它的自明的公理不可能包含在有穷规则中，即人类心智无限超越任何机器；或者存在绝对不可判定的数论命题。（注：按照王浩的说法，哥德尔认为，希尔伯特反对第二选言支，声称“数学中没有不可知”是正确的，否则就意味着人的理性全然无理性，一方面提出理性不能解答的问题，一方面又断言只有理性才能解答这些问题。同时，晚年的哥德尔至少认为有理由接受第一选言支：人类心智胜过机器。对此可参见王浩，1974，pp，324～326和G＠①del，CWⅡ1972a.）与此相应的哲学推论是：或者人类心智的活动不可能归于大脑的活动，因为大脑的所有行为不过像一台由有穷多部件（即神经元和它们的连接）组成的有穷机器；或者数学不仅仅是我们的创造，数学对象和数学事实是独立于我们的精神活动和意愿而客观存在的。在哥德尔看来，承认第一点就将否定将人心等同于机器的生物机械主义；承认第二点我们“就必须接受由数学基础的现代发展获得支持的某种形式的柏拉图主义或数学实在论立场”。（注：Godel,CWⅢ,p.49～50、50.308～309、308～312、322～323、376～379、305.）当然，不排除两个选言支都真的情形。<br>
  随后哥德尔以数学的不可完全性为论据对数学中的唯名论，特别是“数学仅仅是我们的自由创造”和“数学是语法的约定”这两种观点进行批驳并且声称，如果对这里所讨论的概念进一步严格化之后，我们的结论应当是“柏拉图主义是唯一站得住脚的立场。”即“数学描述了一种非感性的实在，它的存在不依赖于人类心智的活动和意愿，它只能被人类心智所感知，而且这种感知恐怕还是不完全的”。Godel,CWⅢ,p.49～50、50.308～309、308～312、322～323、376～379、305.）<br>
  哥德尔的吉布斯演讲对长期困扰人们的不完全性定理给出了他自己的哲学解释，指出了准确而深刻地理解定理哲学义蕴的本质之点，同时还借助数学的不可完全性这一全新的证据，通过对唯名论的批判提供了对于数学柏拉图主义立场的一种辩护，尽管他的结论表面看来是一种推论式的。</p>
<ul>
<li>3  《数学是语言的句法吗？》</li>
</ul>
<p>  吉布斯演讲之后，哥德尔用了两年时间修改演讲稿，准备在《美国数学会通报》上发表，但修改的工作量很大，而且哥德尔发现很难清晰而确切地表达演讲中的断言，特别感到棘手的是对于数学中的语言约定论的批判。因此这一问题当时成了他最为关注的焦点，以至他终于放弃改写演讲稿，转而去写《数学是语言的句法吗？》一文。（注：Dawson，JW,Jr.1995,p.200.）<br>
  1953年，哥德尔再次应谢尔普之邀为《在世哲学家文库》中的《卡尔纳普哲学》卷撰稿。（注：哥德尔曾三次受谢尔普邀请为此文库中的《罗素》卷、《爱因斯坦》卷和《卡尔那普》卷撰稿。）谢尔普建议他以“卡尔纳普与数学本体论”为题写一篇25—40页的文章，但哥德尔表示只想写一篇“对数学本质的唯名论观点的评论”短文。1953—1959年他花费六年时间完成了“数学是语言的句法吗？”这一题目的六个版本。六篇誊写清晰的文章完整地保存在他的遗稿中。1995年《哥德尔全集》第三卷收录了其中的第三稿和第五稿，同年罗德里奇·孔塞格拉编辑的《哥德尔哲学手稿》收录了第四稿和第六稿。通读这几篇手稿可以看出，哥德尔的立场没有任何实质性变化，目的都是对于逻辑实证主义者，特别是汉斯·哈恩和卡尔纳普等人主张的数学的语言约定论给予深刻而严厉的批判。<br>
  “数学是语言的句法”是卡尔纳普以及维也纳学派对数学本质的一种概括。1930年前后，石里克、汉斯·哈恩和卡尔纳普极大地受到维特根斯坦的影响，形成了关于数学本体论中被哥德尔视为“唯名论和约定论相融合”的语言约定论观点。按照这种观点，如卡尔纳普所说，“数学是不含内容、不含对象的辅助语句系统”，数学命题不是对事件域中事件状态的描述，而完全可以归约为语言的句法，即数学定理的有效性仅由某些使用符号的语法约定的推论确定。事实上，卡尔纳普在1937年的《语言的逻辑句法》一书中就是试图实施把数学归约为语言句法的语法方案。<br>
  在第五版中，哥德尔把语言约定论归纳为如下三个基本论题：（1）逻辑和数学命题仅仅是支配符号规则的产物，数学直觉可由约定代替；（2）数学是不含内容的，不存在数学对象也不存在数学事实；（3）由于数学命题不含内容，关于他们的语言约定不可能被任何可能的经验证伪，因此数学的语言约定论与严格经验论一致。哥德尔以他强有力的三个论据：数学的不可完全性、数学内容和数学直觉的不可消除性以及数学与自然科学的可类比性（注：参见刘晓力的《哥德尔对逻辑实证主义的批判》，载于《自然辩证法研究》，1997－（1）。），对这些论题一一给以严厉的批驳，并且在第六版中宣称，“语言约定论立场的任何哲学断言都是站不住脚的”。<br>
  《数学是语言的句法吗？》历经六年数易其稿于1959年完成。2 月份哥德尔却突然致信谢尔普宣布不想发表他的文章了。信中陈述的理由是，第一，完稿之时已经过了卡尔纳普向作者作答的时间，如果没有卡尔纳普答复发表文章对大家都不公平，也难以向世人交代。第二，哥德尔指出，“我完成了这一题目的几个版本，但对哪一个都不满意。按照我自己的意愿作出严厉断言或强硬论证是不难的，但我发现这一题目与哲学的基本问题之一，概念及其关系的客观实在性问题密切相关，要想彻底阐明它比我料想的要困难，而且以普遍持有的偏见，发表目前只完成了一半的工作将弊大于利。”（注：Warren Goldfarb,Introductory note to  19539, G＠①del,CWⅢ,p.324.）<br>
  哥德尔1924年入维也纳大学学习，1926年起参加维也纳小组活动，并且与小组领导人私人关系密切，因此长期以来哥德尔一直被看作维也纳学派成员，然而他从一开始就不赞成逻辑实证主义的观点也从未在公开场合表达过相反的见解，对当时的这一官方立场一直保持缄默。《数学是语言的句法吗？》这篇手稿无疑第一次提供了系统批判逻辑实证主义的有力论证，哥德尔自然预料到来自反对势力的压力，依其个性他并不想在生前引起大的争论，同时按照王浩的解释，他大概发现卡尔纳普的著作中有某种跟他本人层次不同、类型不同的准确性，难以设计一种令双方都满意的共同语言，使他自己的论证令对方心悦诚服，因此这篇论战性极强的文章直到1995年才与世人见面。</p>
<ul>
<li>4  《从哲学的观点看现代数学的发展》</li>
</ul>
<p>  1961年4月哥德尔成为美国哲学会会员。 有理由断定《从哲学的观点看现代数学的发展》是为1963年会员大会准备的一篇（未作演讲的）演讲稿（注：Dagfinn fΦllesdal,Introductory note to  1961, G＠①del,CWⅢ,p.364.）。演讲稿的目的是以哲学的观点评述20世纪数学基础研究的状况，并试图将其纳入一般哲学框架。<br>
  哥德尔首先把各种哲学流派依据它们与形而上学（或神学）的亲疏划分为左右两方，左方是怀疑论、唯物主义、经验主义、实证主义和悲观主义；右方是唯灵论、唯心主义、先验主义、神学和乐观主义。哥德尔显然赞同右倾立场。依他之见，自文艺复兴以来，哲学的发展不是从某一单线上而是整体上从右倾立场转向了左倾立场。“如果这种偏执的转向还没有使人感受到已经侵入数学观中真是一个奇迹。”哥德尔所指的这种偏执的转向无疑是指经验主义和实证主义倾向。在哥德尔看来，数学是一门先验科学，因此它总有与文艺复兴以来的时代精神，即数学中的经验主义、实证主义相背离的倾向；同时它虽然“深陷高度抽象之中”，但就目前而言其基础却具有从未有过的确定性，因此也远离怀疑论。哥德尔认为，20世纪初由集合论悖论引起的所谓“数学危机”显然被经验论者和怀疑论者夸大了，并且“拿来作为左倾膨胀的借口”，认为悖论的出现表明数学内部出现了矛盾。依哥德尔之见，“这些矛盾远离数学而更具哲学意义，同时任何一个了解数学的人都清楚地知道，我们已经以完全令人满意的方式解决了它们。（注：Godel,CWⅢ,p.49～50、50.308～309、308～312、322～323、376～379、305.）”<br>
  在演讲稿中，哥德尔更多的是指明，真理应当介乎左右倾之间或二者的有机结合。因为依老式的右倾哲学观，数学代表一种完全的真理体系，“它的每一个精确表述的是或否的问题必定有一个确切答案”。然而由不完全性定理，这一真理体系不可能诉诸公理集和形式推理规则获得其完全性。同时，按照流行的左倾哲学观，作为出发点的数学公理的真理性不可能由经验证实，因而由它们所得出的结论只具有假说的意义，这种推理只能看成是按照某种规则所作的一种符号游戏。但是由不完全性定理，不借助抽象概念仅仅使用处理符号组合的工具不可能实施数学系统一致性的证明。因此哥德尔主张，不能无视现代数学的新进展盲目背弃信仰去迎合时代潮流，而应当一方面坚持数学知识的确定性，一方面坚信理性提出的问题理性自身能够清晰地予以解答。因此“正确的观点对我来讲似乎应当是，真理位于左右倾哲学观之间或者是二者的结合。”这种结合意味着数学的确定性不能仅仅借助经验证实或演绎证明获得，而要通过加深理解抽象概念，通过清晰阐释抽象概念的意义实现。出乎意料的是，哥德尔认为，“目前有一种科学的清晰阐释这种意义的系统方法，这就是胡塞尔的现象学方法，”G＠①del，CWⅢ，p.383.据王浩和Dagfinn FΦllesdal，哥德尔自1959年开始研究胡塞尔达10年之久，并拥有胡塞尔所有的重要著作。在1961年这篇演讲稿中哥德尔花费大量笔墨对胡塞尔的工作给以高度评价，主张借助现象学方法对我们所需要的抽象数学概念进行分析并发展我们的数学直觉，超越数学形式系统的局限去发现越来越多自明的新公理，以解决数学中每一个清晰提出的问题。</p>
<ul>
<li>5  数学是不可完全的</li>
</ul>
<p>  哥德尔的几篇哲学手稿中明显贯穿着一条主线，借助由不完全性定理揭示的数学不可完全性的深刻本质，通过对当时占统治地位的几大数学观：逻辑主义、形式主义、直觉主义和逻辑实证主义的批判性反思进一步阐述自己的数学哲学立场，并以全新的证据为柏拉图主义数学观提供系统辩护。在这一过程中也表达了他的理性主义和客观唯心主义的一般哲学观。（注：晚年哥德尔在与王浩的谈话中，将自己的哲学观概括为“理性主义的、唯心主义的、乐观主义的和神学的”。Wang Hao，1995.）<br>
  哥德尔一生最为关注的三大数学问题是，数学的不可完全性；数学形式系统的一致性和一致性证明；寻求解决数学基础核心问题的集合论公理。后两个问题事实上与第一个问题密切相关。正如他自己所言：“我的所有元数学结果都是围绕数学的不可完全性或称数学的不可穷尽性问题展开的，”（注：Godel,CWⅢ,p.49～50、50.308～309、308～312、322～323、376～379、305.）而且每一项结果之后都伴有长时间深刻的哲学反思。一方面，正如我们在手稿中所见，柏拉图主义数学观被他视作这些数学结果的哲学推论；另一方面在致王浩的信以及同王浩晚年的谈话中又指出，这种数学观是他建立一系列数学结果的决定性助探原则；同时在多种场合他还强调，柏拉图主义数学观可以从以上两点获得证据支持。（注：对此可参见 Wang Hao，A Logical JourneyFrom G＠①del To Philosophy，The MIT Press即将出版.）因此，哥德尔对数学的不可完全性本质所作的深刻而独立的反思是我们理解哥德尔数学哲学思想的一条基本线索。<br>
  结合生前发表的哲学论文中的思想可以看出，20年代后期哥德尔就已经持有数学实在论立场，1933年首次表示赞成柏拉图主义数学观，1944年和1947年借评价罗素数理逻辑的机会并通过连续统假设这一具体问题以数学实在论的术语系统阐述这种数学观，声明不仅在数和集合的基本层次上承认数学实在论，而且将这种实在论拓展到类和概念上，坚信存在一个客观的与物理世界相分离的抽象概念的世界，主张对这些概念的理解应更多的诉诸直觉。早在1929年哥德尔就已经意识到，由于数学的不可穷尽性，为了克服数学形式系统在表达力和判定力两方面的局限“必须不断从直觉之泉汲取养分”。（注：哥德尔与卡尔纳普1929年的谈话，见Wang Hao 1987，p.51.）在1944、1958和1964年的几篇文章中他对数学直觉问题作了深入分析，同时指出，为了把握高度超穷的客观数学真理和抽象数学概念，必须摈弃康德的先天直觉和布劳维尔的构造性直觉而接受等级越来越高的抽象数学直觉，这种直觉在数学中有着不可替代的认识论作用。<br>
  哥德尔的数学哲学在他的整个哲学中占据核心位置，也是其中阐述最为系统且内涵丰富的部分。如果说哥德尔公开发表的论文主要集中于阐述自己的数学哲学立场，手稿则更侧重在哲学争论中从一个全新的视角，特别是从数学的不可完全性的本质出发对这种立场提供强有力的辩护，虽然这种辩护并未达到令他自己满意的程度。这恐怕也是他生前未发表这些手稿的真正原因。以上几篇哲学手稿无疑提供了理解他的整个哲学思想全新的视界和更为广阔的理论背景，也使我们通过了解哥德尔在哲学争论中所持仗的理论依据进入其思想的更深层次。近年来，哥德尔研究日益受到西方学界的关注，随着各类手稿的陆续公布我们相信哥德尔思想潜在的哲学价值和科学价值将获得更深入的研究。</p>
<ul>
<li>【参考文献】</li>
</ul>
<p>〔1〕哥德尔遗稿已由约翰·道森1984年完成编目，分为12类：①私人信件和科学通信；②商业信函和其他信件；③分专题记录的笔记本；④演讲稿和论文手稿；⑤札记和便笺；⑥其他书写模糊的草稿；⑦从小学到大学的学历材料；⑧法律和政治文件；⑨1930—1939年间的财务文件；⑩就医记录；①①照片；①②其他。<br>
〔2〕奎因为Kurt G＠①del,Unpublished Philosophical  Essays所写的序言，1995，p.7.<br>
〔3〕Kurt G＠①del，Collected Works（简记CW）Ⅲ,p.48.<br>
〔4〕〔5〕〔7〕〔9〕〔10〕〔16〕〔19〕Godel,CWⅢ,p.49～50、50.308～309、308～312、322～323、376～379、305.<br>
〔6〕C.Parsons,1995,pp.49～50.S.Feferman,1986,见G＠①del,CWI,P.31,CWⅢ,P.40.<br>
〔8〕按照王浩的说法，哥德尔认为，希尔伯特反对第二选言支，声称“数学中没有不可知”是正确的，否则就意味着人的理性全然无理性，一方面提出理性不能解答的问题，一方面又断言只有理性才能解答这些问题。同时，晚年的哥德尔至少认为有理由接受第一选言支：人类心智胜过机器。对此可参见王浩，1974，pp，324～326和G＠①del，CWⅡ1972a.<br>
〔11〕Dawson，JW,Jr.1995,p.200.<br>
〔12〕哥德尔曾三次受谢尔普邀请为此文库中的《罗素》卷、《爱因斯坦》卷和《卡尔那普》卷撰稿。<br>
〔13〕参见刘晓力的《哥德尔对逻辑实证主义的批判》，载于《自然辩证法研究》，1997－（1）。<br>
〔14〕Warren Goldfarb,Introductory note to  19539, G＠①del,CWⅢ,p.324.<br>
〔15〕Dagfinn fΦllesdal,Introductory note to  1961, G＠①del,CWⅢ,p.364.<br>
〔17〕G＠①del，CWⅢ，p.383.据王浩和Dagfinn FΦllesdal，哥德尔自1959年开始研究胡塞尔达10年之久，并拥有胡塞尔所有的重要著作。<br>
〔18〕晚年哥德尔在与王浩的谈话中，将自己的哲学观概括为“理性主义的、唯心主义的、乐观主义的和神学的”。Wang Hao，1995.<br>
〔20〕对此可参见 Wang Hao，A Logical JourneyFrom G＠①del To Philosophy，The MIT Press即将出版.<br>
〔21〕哥德尔与卡尔纳普1929年的谈话，见Wang Hao 1987，p.51.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[《乡村里的中国》(冷暖人生)]]></title>
        <id>https://alaskasquirrel.github.io/post/农村-农民/</id>
        <link href="https://alaskasquirrel.github.io/post/农村-农民/">
        </link>
        <updated>2020-05-21T14:38:07.000Z</updated>
        <content type="html"><![CDATA[<p>  “我从来就不热爱土地”</p>
<p>  赖以生存的土地，却也是这辈子千方百计势要挣脱的枷锁。这里是中国最真实的农村，生活着最朴素的农民。不愿回想昔日的土里土气，而那一面恰是最中国的地方。</p>
<p>  乡村好像很多时候它是沉默的，但是其实它是一个特别广大的真实。因为它在中国所占的比重这么大，但是这一大片的真实，他们怎么活着，其实我们是了解得非常之少。很多时候他是无声的，他们不是发出了很热闹的声响。（凤凰卫视《冷暖人生》）</p>
<ul>
<li><a href="https://v.qq.com/x/cover/i7sc2ih3x6qhzra/f0019al8ax5.html">焦波纪录电影《乡村里的中国》（98分钟院线版）</a></li>
</ul>
<p>好奇心日报：<a href="https://www.qdaily.com/articles/58248.html">中国居民财富总额 18 年增长 1300%，但中位数最近没怎么变</a>.  2018年11月13日,<br>
  按照上海发展研究基金会高级研究员刘海影的说法，一旦经济增速无法达到预期，居民工资收入减少，高房价收入比难以维系，人们对房屋的投资性需求将会降低。而这一变化又反过来使跟地产、基建紧紧挂钩的中国经济增速进一步下滑，进一步否定维持高房价的投资理由。对于债务比已经接近 50% 的家庭部门而言，房屋不能变现将直接影响其财富水平。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CPU]]></title>
        <id>https://alaskasquirrel.github.io/post/amd-intel/</id>
        <link href="https://alaskasquirrel.github.io/post/amd-intel/">
        </link>
        <updated>2020-05-20T10:14:38.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://www.computerhope.com/history/processor.htm">Computer processor history</a><br>
http://www.cpu-zone.com/4004.htm<br>
<img src="https://alaskasquirrel.github.io/post-images/1594604346746.jpg" alt="" loading="lazy"><br>
On the lower right-hand corner of the 4004 chip are the initials F.F. for Federico Faggin, the project leader and author of the silicon design.<br>
<img src="https://alaskasquirrel.github.io/post-images/1594604182852.jpeg" alt="" loading="lazy"><br>
(http://www.intel4004.com/)<br>
http://www.cpu-world.com/CPUs/4004/index.html<br>
<a href="http://www.siga.com.cn/kepu-other-CPU.htm">微处理器（CPU）的发展演变历程</a><br>
<a href="https://zhuanlan.zhihu.com/p/131480417">微处理器</a><br>
<a href="https://www.eet-china.com/mp/a19150.html">首批微处理器的惊人故事</a><br>
<a href="https://www.righto.com/">Ken Shirriff's blog</a></p>
<p>趣闻：<a href="https://hardware.slashdot.org/comments.pl?sid=13046218&amp;cid=57792828">Slashdot</a></p>
<p>We all know how all Intel CPUs are broken, but the why is very important.</p>
<p>AMD invented 64-bit for x86 chips AND invented the first true dual core x64 part. At that time AMD had a massive lead over Intel, and it's god-awful, hyper long pipeline Netburts. Tho outlets like Slashdot and Anandtech informed you, at the time, that Netburst- with its race to 10GHz- was the WINNING architecture.</p>
<p>Then Netburst went bust, and Intel went back to the Pentium 3, updated it with AMD's best ideas (legal due to cross patent agreement) and produced the Core 2 architecture.</p>
<p>But, here's the thing. Intel made the NSA and performance friendly decision to BREAK multi-threading on the CPU.</p>
<p>Proper on-chip multi-threading MUST be 'lock and key'. This means each thread has a unique ID, and that ID acts as a 'key' to open the 'lock' of memory resources that thread has the right to access. Intel NEVER implemented 'lock and key' but AMD always did.</p>
<p>So what did Intel's CHEAT achieve apart from ensuring the NSA always has low level access to your Intel CPU?</p>
<ol>
<li>massively improved memory latency, for the hardware mechanism that implements the 'lock' has a real impact on access speeds.</li>
<li>massive improvements on power efficiency (the lock and key takes power for each memory access)</li>
<li>much higher clock speeds due to 1 and 2</li>
</ol>
<p>In other words, ALL the advantages Intel seemed to have over AMD from the core 2 onwards were down to Intel using an illegal (in CS terms) broken by design CPU architecture.</p>
<p>Today the ONLY way to fix the Intel issue is to run ONE thread at a time on the CPU, and do a complete state flush between multi-tasking thread exchanges. The performance hit would approach 80-95%, which is why no solution uses this extreme but correct adjustment.</p>
<p>Next year, AMD's Zen 2 (ryzen 3) utterly wipes out Intel- and Intel will never recover. But Intel sits on a literal mountain of cash, so expect no end of PAID Intel promotion on sites like Slashdot in the continuing future.</p>
<p>趣闻<a href="https://www.solidot.org/story?sid=59396">中文</a></p>
<p>  AMD 发明了 64 位 x86 芯片，发明了第一个真正的双核 x64 芯片，而当时英特尔和科技新闻网站则在吹它的 NetBurst 微架构，号称能冲击 10GHz。NetBurst 失败了。英特尔回到了奔腾 3，利用与 AMD 签署的交叉专利授权协议使用 AMD 的创意推出了 Core 2 架构。但在此过程中，英特尔做出了让 NSA 开心（削弱安全）以及有利于提升性能的决定，它破坏了 CPU 的多线程设计。正确的 CPU 多线程设计需要有锁和钥匙。每个线程需要有独一的 ID，ID 充当了钥匙去打开线程需要访问的内存资源的锁。英特尔没有实现这一设计，而 AMD 实现了。</p>
<ul>
<li>英特尔的作弊方法所具有的优势包括：<br>
1）极大的改进内存延迟，因为实现锁的硬件机制对访问速度有影响；<br>
2）极大的改进了功耗，因为内存访问的钥匙和锁都有功耗；<br>
3）以上两点让它的频速更高。</li>
</ul>
<p>英特尔 Core 2 架构相对于 AMD 的优势实际上是英特尔破坏 CPU 正确设计实现的。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[转载] 霍金：哥德尔和物理学的终结]]></title>
        <id>https://alaskasquirrel.github.io/post/霍金-哥德尔-物理学/</id>
        <link href="https://alaskasquirrel.github.io/post/霍金-哥德尔-物理学/">
        </link>
        <updated>2020-05-19T04:38:26.000Z</updated>
        <content type="html"><![CDATA[<p>原文 http://www.hawking.org.uk/godel-and-the-end-of-physics.html<br>
音频 http://www.damtp.cam.ac.uk/events/strings02/dirac/hawking/<br>
中文 http://cssm.org.cn/view.php?id=3985 中国战略与管理研究会</p>
<p>  本次演讲中，我想问的是，我们在追求理解和知识方面能走多远：我们是否能最终发现一套完备形式的自然规律？我所说的完备形式是指一套规则，这些规则至少原则上可使我们任意精确地预测未来，了解任一时刻宇宙的状态。</p>
<ul>
<li>决定论流传久远</li>
</ul>
<p>  从亚里士多德往后，哲学家和科学家都一直只是定性地认识规律。牛顿在1687年发表了包含其万有引力理论的《自然哲学数学原理》，正是牛顿的这一著作使人们开始来定量和精确地认识规律。这导致了“科学决定论”思想，这种思想大概是由拉普拉斯最先表达的。如果在某一时刻，一个人知道宇宙中所有粒子的位置和速度，那么根据科学规律我们就能计算得出它们在任何其它时刻的位置和速度，无论是过去还是未来。<br>
  20世纪初期，一系列的科学发现诸如放射性原子的衰减似乎是随机发生的，使决定论思想濒于破产，用爱因斯坦的语言来说，似乎是“上帝在掷骰子”。不过，科学界通过重新定义什么是对宇宙的完整理解及更改目标，重新挽救了决定论。这主要是狄拉克的贡献。<br>
  狄拉克表明，薛定谔和海森堡的工作可以整合到对实在进行描述的新图景——量子理论中。在量子理论中，一个粒子不是像在经典牛顿理论中那样用位置和速度两个量来描述，而是用单一量——波函数来描述。</p>
<ul>
<li>打了折的决定论</li>
</ul>
<p>  波函数给出粒子可能在某一点出现的概率和从一个点到另一个点之间运动速度变化的概率，人们可以在波函数中求解到精确的位置或者精确的速度，但不能同时确定两者。乍看这似乎是使完整的决定论变得不可能。因为人们不能同时精确地知道粒子在某一时刻的位置和速度，怎么能预测其未来状况呢？但是在量子理论中，人们不需要同时知道位置和速度两个量。如果一个人知道物理规律及某一时刻的波函数，那他就可用薛定谔方程计算出该波函数随时间变化有多快，进而计算出任何其它时刻的波函数。<br>
  人们因此可以宣称这还是一种决定论，不过这种决定论是一种打了折的决定论。因为人们不能精确地预测位置和速度这两个量，而只能预测波函数一个量。我们得到的是一种被重新定义的决定论，刚好是拉普拉斯所设想的决定论的一半。<br>
  为了计算出波函数如何随时间变化，人们需要了解在整个宇宙都成立的量子规律。因此问题是，我们对这样的规律知道多少？</p>
<ul>
<li>没有理论能预测未来</li>
</ul>
<p>  尽管量子理论以及涉及电磁力的麦克斯韦方程的确适用于绝大部分领域，但还有两个重要的领域在其适用范围之外，一个是核力，一个是引力。核力决定了太阳发光、元素的形成，而引力导致了恒星和行星乃至宇宙本身的形成。所以，为了完整地理解宇宙，至少能够原则上精确地预测各种事物，需要把这些方面都统一起来。<br>
  弱核力已与麦克斯韦方程统一起来，形成电弱统一理论。对强核力，则由另一种不同的理论——称为QCD——加以描述。电弱统一理论和QCD理论加在一起就组成粒子物理学的所谓“标准模型”，其目标是描述除引力外的所有事物。<br>
  尽管标准模型在一切实际用途中都已足够用，但科学家们仍然在孜孜寻求，试图阐发出可以适用于整个宇宙的完备理论。这种追求的动力不在于经济原因。从伽利略以来，没有任何一个科学家是为了金钱而进行基本理论研究的。我们寻求一个完备理论的真正原因是我们想理解宇宙，我们觉得我们不只是黑暗而神秘力量的牺牲品。如果我们认识了宇宙，那么我们就可在某种意义上控制它。而现在的标准模型很清楚不能满足这个要求。<br>
  如果我们要理解宇宙的话，就必须有一个完全协调一致的量子引力理论。在过去30多年间，构建量子引力理论成了理论物理学界的最重大问题。但是这非常困难。<br>
  从1985年以来，我们就认识到超引力和超弦理论都属于一个更大结构，即M－理论，而M－理论不是一种通常意义上的理论，而是一系列理论的集合。该集合中的每一理论在限制条件如低能量或低辐射情况下都成立，但是超出这限制条件就不适用了。这意味着它们中没有任何一个理论能够精确地预测宇宙的未来。</p>
<ul>
<li>我们不是天使</li>
</ul>
<p>  直至目前，大多数人都含蓄地假定存在一种终极理论，我们最终能够发现它。事实上，我本人就曾说过我们会很快找到这个理论。但是M－理论让我怀疑这是否是真的。也许要以有限数量的命题来阐述宇宙终极理论是不可能的。这和哥德尔不完备性定理非常相似，该定理说任何有限公理系统都不足以证明其中的每一个数学命题。<br>
  哥德尔定理和我们是否能以有限数量的原理构建宇宙终极理论有什么关系呢？一个联系是明显的。根据实证论科学哲学，一个物理理论乃是一数学模型。因此如果有数学命题不能证明的话，那就有物理问题不能预测。<br>
  在标准的实证论科学哲学看来，物理理论无偿居住于柏拉图式理想数学模型天国中。也就是说，一个模型可以任意程度地详细，可以包含任意多量的信息，而不会影响它们所描述的宇宙本身。但我们不是天使，可以从外面观察宇宙。相反，我们和我们的模型两者都是我们所描述的宇宙中的组成部分，因此一个物理理论是自指的，就像哥德尔定理所说的那样。人们因此可以认为它或者是不一致的，或者是不完备的。我们迄今所有的各种物理理论既是不一致的，也是不完备的。<br>
  如果不存在一种可从有限条数原理推导出来的终极理论，一些人将非常失望。我过去就属于这个阵营。但是我已改变了我的看法。现在我很高兴我们寻求知识的努力永远都不会到达终点，我们始终都有获得新发现的挑战。没有这种挑战，我们就会停滞。哥德尔定理保证了数学家们总有事情要做，我想M－理论也将为物理学家们做同样的事情。（凌高/摘译）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[旧记忆（更新中）]]></title>
        <id>https://alaskasquirrel.github.io/post/旧中国影像/</id>
        <link href="https://alaskasquirrel.github.io/post/旧中国影像/">
        </link>
        <updated>2020-05-18T15:24:49.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>（封面 Felice Beato, North and East Corner of the Wall of Pekin, 1860）</li>
</ul>
<p>【一席】王溪：把100多年前国外所有关于中国的影像集合在一起，第一名的关键词大伙猜是什么？</p>
<ul>
<li>https://www.bilibili.com/video/av15920063</li>
</ul>
<p><img src="https://alaskasquirrel.github.io/post-images/1591199092647.jpg" alt="" loading="lazy"><br>
Panorama of Peking, Taken from the South Gate, Leading into the Chinese City<br>
Felice Beato (English.born Italy, 1832-1909)<br>
Henry Hering (British 1814-1893)<br>
negative October 1860, print 1862.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[《资本论》传入中华]]></title>
        <id>https://alaskasquirrel.github.io/post/资本论/</id>
        <link href="https://alaskasquirrel.github.io/post/资本论/">
        </link>
        <updated>2020-05-17T02:17:00.000Z</updated>
        <content type="html"><![CDATA[<p>  1867年9月14日，马克思的《资本论》第一卷 德文版 在德国汉堡出版。</p>
<p>  《资本论》是马克思倾尽毕生精力完成的巨著，这部伟大的著作传入中国经历了漫长的岁月，它的翻译与传播充满了艰难险阻甚至带着不少传奇色彩。①马克思和《资本论》名字首次见诸中文报刊是在1899年初。该年，英国传教士李提摩太(Timothy Richard)及其中国秘书蔡尔康合作节译了英国社会学家本杰明·基德(Benjamin Kidd)的《社会进化论》(Social Evolution)一书，书名译为《大同学》，前四章发表在广学会主办的《万国公报》上。第1章《今世景象》发表在《万国公报》1899年2月第121册，其中写道：“其以百工领袖著名者，英人马克思也。”②这是马克思的名字第一次出现在中文报刊上。第3章《相争相进之理》发表在《万国公报》1899年4月第123册，其中写道：“试稽近代学派，有讲求安民新学之一家。如德国之马克偲，主于资本也。”③这是中国刊物上第一次提及马克思的《资本论》。1902年，梁启超在《新民丛报》第18号上发表《进化论革命者劼德之学说》一文，文中赞扬劼德(即基德)的进化论的同时，也简要提及了马克思及其学说，指出“麦喀士，日耳曼人，社会主义之泰斗”④。</p>
<p>  此后，不断有人在著述或译著中提及马克思和《资本论》，但都比较简略。1906年朱执信在《民报》上发表《德意志社会革命家小传》，详细介绍了马克思的生平事迹、马克思的主要著作《共产党宣言》和《资本论》的内容并对马克思经济学说发表了个人见解。1912年，孙中山先生在上海对中国社会党的演说中，评析了《资本论》的观点。⑤</p>
<ul>
<li>十月革命一声炮响，给中国送来了马克思列宁主义。宣传和初步研究《资本论》乃至马克思主义的译著、论著如雨后春笋般涌现中华大地。</li>
</ul>
<p>  1919年5月，李大钊主编的《新青年》第6卷第5号刊发了马克思专号，其中最为有名的是李大钊的3万字长文《我的马克思主义观》(先后发表在《新青年》第6卷第5、6号)。1922年2月19日，李大钊的另一篇文章《马克思的经济学说》发表在《晨报》副刊上。李大钊在这两篇文章中较为详细地阐述了马克思主义经济学说的主要内容，可以说他是中国认真研究《资本论》并准备将其原理付诸实践的第一人。1919年6月2日至11月11日，陈溥贤根据高畠素之的日译本，在《晨报》副刊的“马克思研究专栏”上连续译载了柯祖基(即考茨基)的《马氏资本论释义》，1920年9月以《马克思经济学说》为名由商务印书馆出版。这是《资本论》第一个中文诠释本。1920年9月，社会主义研究社出版了米里·伊·马尔西的《马格斯资本论入门》，由李汉俊根据日文版重译。该书一经问世便得到李大钊、陈独秀的大力推荐，深受中国进步知识分子和革命志士的欢迎。</p>
<p>  1920年，周恩来在天津领导工商界和学生集会游行、声讨反动政府卖国罪行的活动中被军阀逮捕。在监狱里，他不顾个人安危，给被捕的青年和各界代表讲解了马克思学说：“六月七日。……周恩来续讲马克思学说——经济论中的《资本论》，同《资产集中说》。今天马氏学说已讲完了。”⑥这是那个时期仁人志士口头传播《资本论》的生动事例。</p>
<p>  1920年3月，在李大钊的倡导下，北京大学19位怀有共产主义信仰的学生发起成立马克思学说研究会。研究会成立后，翻译组请李大钊和陈启修(1920年曾在北京大学按《资本论》的体系讲授马克思的经济学说)担任导师，根据某个德文版翻译《资本论》。据当时参与翻译的罗章龙回忆，他们把《资本论》第1卷的译稿交给了陈启修。⑦尽管这部译稿没能保存下来，但它是我国《资本论》翻译史上的一次有益尝试。</p>
<p>  1920年10月，上海《国民》月刊发表了费觉天的译文《资本论自叙》，即《资本论》第1卷德文第1版的《序言》。就目前的文献看，这篇《序言》是与中国读者见面的《资本论》最早的“部分中译本”了。</p>
<p>  郭沫若早年留学日本，很早就抱定了全文翻译《资本论》的决心。1926年10月，郭沫若与商务印书馆商榷此事，但印书馆不敢承担出版《资本论》的责任。尽管郭沫若未能实现自己的计划，但这并没有改变他追求真理的决心和研究《资本论》的热情。1927年，郭沫若加入中国共产党，1931年翻译了马克思的《政治经济学批判》，由上海神州国光社出版。1936年10月，他撰写了《&lt;资本论&gt;中的王茂荫》，为理解和翻译《资本论》的有关内容做出了贡献。</p>
<ul>
<li>马一浮（1883—1967）最早将《资本论》引进中国 (引自参考文献11)</li>
</ul>
<p>  清光绪二十九年（1903年），美国圣路易斯将举办第十二届世博会，中国首次以政府名义正式参加世博会。清政府派溥伦亲王为正监督（团长），并要选派懂外文的人员去负责筹建中国展馆。时年20岁的马一浮由于懂外文，被录用去做中国展馆的筹建工作。</p>
<p>  马一浮到达美国后，开始他抱着欣喜、激动、期盼的心情，一心想学好外语，学好西方哲学、文学，他认为学习是他的第一乐趣。不到10天，他找到一处学英语的地方，每天只要花一个美元从师学习英语2小时，学习文法。不久，他翻译了《日耳曼社会主义史》、《法国革命党史》，《政治罪恶论》等书刊。他的第二个乐趣是购读了不少社会学著作和图书，特别使他高兴的是购买到了马克思的《资本论》。他在清光绪三十年（1904年）3月17日的日记（《一佛之北米居留记》）中写道：“今天下午我得到英译本马格士（马克思）《资本论》一册，此书求之半年矣，今始得之，大快，大快，胜服仙药十剂，予病若失矣！”这时马一浮正在患感冒，还发着高烧。他说我回国时一定要把马克思的《资本论》这部巨著带回中国去。</p>
<p>  马一浮在美国考察了社会的一些实际情况后，心情逐渐由原来的欣喜、激动、期盼变成了苦闷、悲愤、失望。他原以为美国是文明、民主的，实际上却是野蛮而专权的。特别使他不能忍受的是对华人的歧视，他在日记中说：“美人定华商赴会，须人纳500金圆，呈保书证明实系赴会，乃许入境，既到会所，则不得出会场一步，且西人之上等俱乐部概不许入，出会场者即按例收捕，送返中国，当处以流罪。”他说：“这哪里是参展，简直是进牢笼。”他还说：“闻圣路易斯大学等，皆以分割中国之当否令诸生演说。在戏曲舞台上，中国人亦被描绘成让人笑骂的无赖等等，为什么会造成这样？主要是清政府的腐败，中国人民尚未觉醒，而受美国歧视。”马一浮认为要在中国传扬马克思的《资本论》去唤醒中华民族的觉醒，才能使中华民族得以振兴。</p>
<p>  清光绪三十年（1904年）5月6日，马一浮在美国学习工作结束，先后历时302天。临行前又购买了一本《资本论》德文版。回国后，他将原有的英文版《资本论》送给了好友谢无量，德文版《资本论》送给上海“国学扶轮社”的负责人刘师培收藏。后来由于刘师培叛变革命，“国学扶轮社”被查抄，《资本论》流失于民间，所幸被谢无量在旧书摊上发现（一说被马君武发现），重又买下还给马一浮。1937年，竺可桢邀请马一浮到流亡中的浙江大学讲课，马一浮遂将此书赠与浙大图书馆。</p>
<ul>
<li>李汉俊（1890—1927）-《马格斯资本论入门》</li>
</ul>
<p>1920年，上海新文化书社出版了一本译著《马格斯资本论入门》，“马格斯”即“马克思”。有研究者称，毛泽东最早就是通过《马格斯资本论入门》接触到了《资本论》。</p>
<p>  译者李汉俊在序言中对该书做了简单介绍：“原著叫作Shop talks on Economics，系《万国社会党评论》联合编辑者米里•伊•马尔西（Mary E.Marcy）所著。内容是将马格斯经济学说底骨子即商品，价值，价格，剩余价值，以及资本和劳动底关系，用很通俗的方法说明了出来的。”</p>
<figure data-type="image" tabindex="1"><img src="https://alaskasquirrel.github.io/post-images/1591107360630.jpg" alt="" loading="lazy"></figure>
<p>  不过，李汉俊并非直接从英文原文翻译，而是根据日本人远藤无水所译《通俗马格斯资本论》进行的重译。</p>
<p>  李汉俊，湖北潜江人，原名李书诗，又名李人杰，是参加中国共产党第一次代表大会的13名代表之一。1902年，他被张之洞选派到日本留学。读大学时与日本著名的马克思主义经济学者河上肇有师生之谊。</p>
<ul>
<li>陈启修（1886—1960）汉译《资本论》第一卷第一篇（引自参考文献12）</li>
</ul>
<p>  1930年3月，上海昆仑书店出版《资本论》第一卷第一分册，译者为陈启修。而当时出版此书的昆仑书店经理李鹤鸣，正是上海共产主义小组代表、中国共产党的创始人之一李达。</p>
<p>  陈启修，字惺农，生于四川省中江县，曾用笔名勺水、罗江，后改名陈豹隐。1917年毕业于日本东京帝国大学，曾是河上肇的学生。五四前后因在北京大学教授马克思主义政治经济学而驰名，主要著作有《经济学原理十讲》、《经济学讲话》等。</p>
<p>  陈启修在早期传播《资本论》方面起过很大作用，1927年大革命失败后，他辞去武汉《中央日报》总编辑的职务，脱党蛰居日本，继续从事理论著述、文学创作和翻译工作。</p>
<p>  1930年，陈启修在日本根据考茨基国民版(底本为《资本论》第1卷德文第2版)1928年第8版，参照日本学者河上肇的日译本，译出了《资本论》第一卷第一篇，主题为“商品与货币”，并作为《资本论》的第一分册出版。这是《资本论》中最为基础又不好理解的部分，遇到难译的地方，陈启修就加上自己的“陈注”，正文中“陈注”有47条，除3条注译地名，其余都是讨论名词的翻译问题。陈启修在《资本论》第1卷第1分册《译者例言》后面，收录并翻译了考茨基、河上肇和恩默特介绍《资本论》的文章，约占全书1/3的篇幅。陈启修的译本原计划分10册出版，但在当时的艰难条件下只出版了第1分册。</p>
<figure data-type="image" tabindex="2"><img src="https://alaskasquirrel.github.io/post-images/1591107399404.jpg" alt="" loading="lazy"></figure>
<p>  不久之后，早年加入中国共产党并曾留学苏联的潘冬舟，续译了《资本论》第一卷第二至第四篇，以第二分册和第三分册的形式分别于1932年和1933年由北平东亚书店出版，各印2000册。这一版本没有说明它所依据的外文版本。潘冬舟原计划每季度出版一个分册，2年内将3卷《资本论》译完，但这一计划未能实现，1935年潘冬舟被国民党杀害。至此，读者若能将陈启修翻译的第一分册和潘冬舟翻译的第二、三分册《资本论》摆在一起，就可以说是拥有《资本论》第一卷的完整本了。</p>
<p>  1932年9月，北平国际学社出版了王慎明(即王思华)和侯外庐（1927年夏，侯外庐进入巴黎大学文学院，开始学习德语。1928年，正式动笔翻译《资本论》。1930年侯外庐回国时，把已经译出的20章译稿寄存于柏林成仿吾处。）合译的《资本论》第1卷上册(第1篇至第3篇第7章)。实际上，这一册是王思华通过关系由北平京华印刷厂秘密排印的，国际学社只是一个虚构的出版社。第1卷上册出版后，侯外庐一度被国民党政府逮捕入狱，罪名是“宣传与三民主义不相容的主义”。1934年至1937年侯外庐单独翻译完第2、3卷，并交由续范亭将军带往延安，不幸书稿在战火中化为灰烬。1936年6月，世界名著译社出版了中册(第3篇其余2章和第4篇)、下册(第5篇至第7篇)和一卷合订本，译者署名为右铭(王思华)、玉枢(侯外庐)。这个版本以恩格斯编辑的德文第4版为蓝本，同时参照英文、法文和日文几种译本。至此，在《资本论》第1卷出版69年后，第一个完整的中译本诞生了。</p>
<p>  在此期间，商务印书馆也于1934年5月出版了由吴半农译、千家驹校的《资本论》第1卷第1册，内容包括《资本论》第1卷的第1、2篇。吴半农根据1928年出版的伊登和塞达尔·保罗(Eden &amp; Cedar Paul)的英译本翻译。由于这个译本出在陈启修、潘冬舟和王思华、侯外庐的版本之后，内容上又没有超过以上版本，因此并未产生较大影响。说来奇怪，校对者千家驹竟然一直不知道这本书出版了。直到1982年，中央编译局为纪念马克思逝世100周年向他征稿时，他才得知此事。目前只有中央编译局的图书馆藏有它的孤本。马克思主义的书籍在当时命途多舛，也可由此窥见一斑。</p>
<ul>
<li>1938年：郭大力（1905-1976）王亚南（1901—1969）合作翻译《资本论》全译本诞生（引自参考文献13）</li>
</ul>
<p>  1938年9月，在《资本论》出版71周年之际，经济学家郭大力、王亚南合作翻译完成《资本论》的全译本（三卷本），由上海读书生活出版社出版，分精装版和平装版，依据的是苏联1932-1934年马恩列学院编辑出版的德文版《资本论》(底本为《资本论》第1卷德文第4版)。郭大力，江西南康人，1923年入厦门大学学习化学，后转学上海大夏大学攻读哲学。王亚南，湖北黄冈人，1926年毕业于武昌中华大学教育系。</p>
<p>  1928年春，郭大力来到杭州大佛寺，开始翻译《资本论》，当年译完了第1卷。同年，王亚南经历了大革命的失败，也来到大佛寺栖身。两人一见如故，立志共同翻译《资本论》。由于感到不了解资产阶级古典经济学，就无法准确理解和翻译《资本论》，郭大力并没有急于出版第1卷，而是与王亚南一起，决心先翻译古典经济学著作。1934年，郭大力和王亚南再次投入到《资本论》的翻译中，可惜此前第1卷的译稿已经全部毁于日寇侵略上海的一·二八事变的战火之中，为此他们不得不从头开始。</p>
<p>  1930年他们翻译了李嘉图的《政治经济学及赋税原理》（1932年出版），1931年翻译了亚当•斯密的《国富论》（1934年出版）。终于在经历了重重波折之后，1937年初上海读书生活出版社接受了《资本论》的全译本，该出版社是李公朴、艾思奇、柳湜、黄洛峰、郑易里等创办和主持的书店。</p>
<p>  1936年前后，郭大力向商务印书馆和中华书局洽谈出版意向，但这两家出版社都不愿意承担出版《资本论》的政治风险。由中国共产党直接领导、设在国民党统治区的读书生活出版社得知郭大力、王亚南为《资本论》全译本所做的努力之后，给予他们大力支持，在出版社经济拮据、处境艰难的情况下，毅然决定出版他们的译稿。</p>
<p>  1938年，南京等地相继沦陷后，上海租界内出现了相对平静的局面。读书生活出版社的郑易里决定利用这个条件在上海出版《资本论》。为了在最短的时间内出齐3卷本《资本论》，1938年4月，郑易里给在赣南老家翻译的郭大力打电报，希望他能亲自到上海完成全书的翻译和最后的校订。⑧为了《资本论》能够顺利出版，郭大力不顾交通不便和日军轰炸的危险，立即启程来到上海。郭大力和出版社的同志通力合作，经过4个多月夜以继日的高强度劳动，将3卷《资本论》出版了。《资本论》首印3000部，然而2000部由于战乱在运输途中沉入海底，出版社当即加印2000部。由于当时人手少、时间紧、条件差，译文中存在一些错误和误排。郭大力将3卷《资本论》重新校订，编制了一个包括1700余处的详细勘误表，连同彭迪先翻译的《资本论》第1卷补遗《资本生产物的商品》一文(即1863-1865年手稿中的《第六章直接生产过程的结果》的第1部分《作为资本产物的商品》)，于1940年5月以《资本论补遗勘误》为名出版。1947年，全译本由读书出版社重印2000部。翌年在哈尔滨解放区第二次再版3000部，此版扉页前附了马克思的照片，并根据勘误表对正文进行了修订。</p>
<p>  1940年春，郭大力按照考茨基编辑的版本，着手翻译《剩余价值学说史》。马克思把《剩余价值学说史》当作《资本论》的第4册来写。因此，郭大力认为只有把它译成中文，才算把《资本论》完整地介绍给中国人民。在翻译过程中，郭大力历经劫难，辗转逃亡，译稿直到1949年6月才得以出版。</p>
<figure data-type="image" tabindex="3"><img src="https://alaskasquirrel.github.io/post-images/1591107436343.jpg" alt="" loading="lazy"></figure>
<ul>
<li>1949年以前《资本论》在中国的学习、研究概况</li>
</ul>
<p>  十月革命以前，只有极少数有识之士介绍过马克思及《资本论》;十月革命之后，尤其是1921年中国共产党成立之后，马克思主义得以广泛传播。这使中国的封建地主和资产阶级感受到了极大的威胁。国民党不断打压、迫害马克思主义者，将马克思主义书籍列为禁书。</p>
<p>  《资本论》在国统区是禁书，但在延安和其他解放区却被视为革命指南。党中央通过党校、马列学院、《资本论》研究小组等形式组织中共党员学习和研究《资本论》，涌现出了张闻天、王学文等在《资本论》研究方面有很高造诣的革命者。中国共产党的领袖毛泽东也曾认真研读了《资本论》，并且作了批注。毛泽东在他1937年8月写的《矛盾论》中，赞扬马克思在《资本论》中运用的矛盾分析方法。⑨1941年在《关于农村调查》一文中他就社会研究中的分析—综合方法说道：“马克思的《资本论》就是用这种方法来写成的，先分析资本主义社会的各部分，然后加以综合，得出资本主义运动的规律来。”⑩</p>
<p>  郭大力、王亚南不仅在翻译、传播《资本论》中不遗余力，还根据《资本论》的基本方法和观点，研究中国的实际问题。王亚南深入研读《资本论》，并运用《资本论》的原理和方法研究中国半封建半殖民地经济形态，于1946年出版专著《中国经济原论》(1957年修订本改名为《中国半封建半殖民地经济形态研究》)。这本书得到了国内外学术界的高度评价，多次再版，并先后在日本、苏联翻译出版。1947年，郭大力的《生产建设论》一书出版，该书主张社会主义经济建设应该在国家的领导下进行，发挥国家在组织生产方面的领导作用。</p>
<p>  除王亚南和郭大力外，还有一批马克思主义经济学家运用《资本论》的原理和方法，活跃在经济学研究的前沿，出版了一批有影响的经济学研究专著。代表性人物有：沈志远、王学文、许涤新、薛暮桥、王思华等。</p>
<ul>
<li>新中国成立后的译著版本不在此列举</li>
</ul>
<p>  陈寅恪（1890—1969）先生在其口述长文《对科学院的答复》（1953年12月1日）中，提及到自己于宣统三年（1911）在瑞士读过资本论原文（德文版）。</p>
<p>  陆晓光老师在《王国维读&lt;资本论&gt;年份辨》中，一说王国维（1877—1927）比陈寅恪更早读过德文版资本论。</p>
<h3 id="参考资料">参考资料：</h3>
<p>1.本文参考了众多有关《资本论》在中国翻译和传播的论著，如杨国昌主编：《&lt;资本论&gt;研究资料汇编》，河北人民出版社1981年版;中央编译局马恩室编：《马克思恩格斯著作在中国的传播》，人民出版社1983年版;胡培兆、林圃：《&lt;资本论&gt;在中国的传播》，山东人民出版社1985年版;Zhou Liangxun,Zur Verbreitung des Kapitals in China,in:Beitrge zur Marx-Engels-Forschung,Nr.28,Berlin,1989。此外还就此问题请教了多位专家。</p>
<p>2.这句话下面的文字是：“马克思之言曰：纠股办事之人，其权笼罩五洲，突过于君相之范围一国。”(广学会：《万国公报》，1899年2月，第121册。亦可参见李天纲编校：《万国公报文选》，三联书店1998年版第614页)学者认为，这其实是《共产党宣言》中的思想的表述。</p>
<p>3.广学会：《万国公报》，1899年4月，第123册。亦可参见李天纲编校：《万国公报文选》，第620页。</p>
<p>4.梁启超：《饮冰室合集》第5册，中华书局2015年版第1111页。</p>
<p>5.孙中山：《在上海中国社会党的演说》，载《孙中山全集》第2卷，中华书局1982年版。有学者认为，孙中山阅读《资本论》，可能始于1896年流亡伦敦期间(参看姜旭朝：《&lt;资本论&gt;对孙中山“节制资本”思想的影响》，载《文史哲》1987年第4期)。顺便指出，谁是中国最早接触《资本论》的人，学术界也有研究。陆晓光认为，王国维读《资本论》是在20世纪初，这在时间上比陈寅恪20世纪20年代初读《资本论》早了十多年，即便与李大钊读《资本论》的时间相比照，王国维也是早了约十年;由此当可认为，王国维可能是中国现代史上最早接触《资本论》的学者(参看陆晓光：《王国维读&lt;资本论&gt;年份辨》，载《文汇报》2011年6月13日)。李友唐指出，马一浮1903年赴美后购得英文版《资本论》，1904年赴欧后又在柏林购得德文版《资本论》，并在1905年回国时将这两部外文《资本论》带回;因此马一浮是中国引进《资本论》的第一人(参看李友唐：《马一浮是中国引进&lt;资本论&gt;的第一人》，载《中国社会科学报》2015年6月1日)。</p>
<p>6.周恩来：《周恩来早期文集》上卷，南开大学出版社1993年版第420页。</p>
<p>7.罗章龙：《回忆北京大学马克思学说研究会》，载《新文学史料》1979年第3期。</p>
<p>8.郭宝璘、王希和：《&lt;资本论&gt;三卷中文全译本的翻译和出版》(上)，载《学习时报》2005年5月2日。</p>
<p>9.《毛泽东选集》第2版第1卷第307页。</p>
<p>10.《毛泽东文集》第2卷第380页。</p>
<p>11.散木《马一浮和陈寅恪谁最早读原文〈资本论〉》，《中华读书报》2002年4月17日。</p>
<p>12.刘南燕《陈启修——第一位翻译《资本论》的中国学者》，《前进论坛》2003年09期。</p>
<p>13.廖信春《江西人郭大力:《资本论》中文首译》，《党史文苑》2005年07期。</p>
<p>郭伟伟《不应遗忘的&lt;资本论&gt;翻译者》，《北京日报》2012年5月14日。</p>
<p>马镜泉《马一浮传略》</p>
<p>王元化（1920—2008）《思辨录》</p>
<p>陈寅恪《对科学院的答复》（口述长文），1953年12月1日。</p>
<p>陆晓光《王国维读&lt;资本论&gt;年份辨》.《文汇报·文汇学人》，2011.06.13.</p>
<p><a href="http://www.cwzg.cn/history/201803/41480.html">《资本论》在中国的翻译、传播和接受</a>（原引自中央编译局《马克思主义与现实2017年第2期 特别策划版》）<br>
<a href="https://web.archive.org/web/20071115001317/http://www.cctb.net/mejd/slyj/200502240030.htm">《资本论》问世史考</a> 蔣海益 （资料来源：《社会科学报》2003年第62期）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[好奇心（自學）]]></title>
        <id>https://alaskasquirrel.github.io/post/learning/</id>
        <link href="https://alaskasquirrel.github.io/post/learning/">
        </link>
        <updated>2020-05-16T13:09:28.000Z</updated>
        <content type="html"><![CDATA[<p>计算机科学：✴️</p>
<p>黑客道与教育传统的复兴 - 洪峰<br>
<a href="https://www.theatlantic.com/magazine/archive/1945/07/as-we-may-think/303881/">As We May Think</a>   Vannevar Bush 1945  译&lt;诚如我们的想象&gt;<br>
<a href="https://www.cs.cmu.edu/~rwh/courses/ppl/phil.html">Why Study Programming Languages?</a> by Robert Harper<br>
<a href="http://ed-thelen.org/comp-hist/EarlyBritish.html">Early British Computers</a><br>
<a href="http://ed-thelen.org/comp-hist/CBC.html">Computing Before Computers</a><br>
&lt; The Pattern on the Stone&gt; Danny Hillis &amp; 解释计算机如何运转<br>
<a href="https://www.bbc.com/news/technology-18327261">Prof Simon Lavington (Computer historian) - &quot;Alan Turing: Is he really the father of computing?&quot;</a><br>
<a href="https://people.cs.clemson.edu/~mark/uprog.html">A Brief History of Microprogramming</a><br>
<a href="https://people.freebsd.org/~lstewart/articles/cpumemory.pdf">What every Programmer should know about Memory</a>    Ulrich Drepper 2007<br>
&lt; Memory Systems: Cache、DRAM、Disk&gt;Bruce Jacob, Spencer W.Ng, David T.Wang<br>
<a href="https://www.cs.uoregon.edu/research/summerschool/archives.html">Oregon Programming Languages Summer School</a><br>
<a href="http://okmij.org/ftp/">FTP Index</a><br>
<a href="http://settheory.net">Set Theory and Foundations of Mathematics</a><br>
<a href="http://www.goodmath.org/blog/">Good Math/Bad Math</a><br>
<a href="https://sbseminar.wordpress.com">Secret Blogging Seminar</a><br>
《数学极客：探索数学、逻辑、计算之美》Mark C. Chu-Carroll 机械出版社2018年出版。<br>
《哥德尔证明》欧内斯特·内格尔(Ernest Nagel),詹姆士 R. 纽曼(James R. Newman).<br>
《From Mathematics to Philosophy》 王浩 1974.<br>
&lt; On the building blocks of mathematical logic&gt; Moses Schonfinkel 1924<br>
《数理逻辑是什么》John N. Crossley 中国轻工业出版社。<br>
《数理逻辑导引》冯琦 科学出版社2017年9月出版。<br>
《数理逻辑   证明及其限度》杨跃、郝兆宽、杨睿之<br>
《数理逻辑通俗讲话》王浩 著， 科学出版社1981年2月出版。<br>
《数理逻辑发展史：从莱布尼茨到哥德尔》张家龙 社会科学文献出版社1993年8月出版。<br>
《数学·计算·逻辑》陆汝铃 湖南教育出版社1993年4月出版。<br>
《哥德尔》王浩 著，康宏逵 译， 上海译文出版社2002年9月出版。<br>
&lt; Collected Works: Kurt Godel &gt;哥德尔文集<br>
<a href="https://www.britishwittgensteinsociety.org">British Wittgenstein Society</a><br>
《逻辑之旅——从哥德尔到哲学》王浩 著，邢滔滔 郝兆宽 汪蔚 译，浙江大学出版社2009年2月出版。<br>
《计算机科学中的离散结构》王元元 张桂荟 编著 机械工业出版社<br>
《计算机科学中的现代逻辑学》王元元 编<br>
《人工智能简史》尼克 人民邮电出版社。<br>
《计算机与人脑》冯·诺伊曼 商务印书馆<br>
《人工智能哲学》玛格丽特·博登   上海译文出版社2001年11月出版。<br>
<a href="http://logic.fudan.edu.cn/home">Mathematical Logic at Fudan</a><br>
<a href="https://logic.pku.edu.cn/index.htm">北京大学 - 逻辑、语言与认知研究中心</a><br>
<a href="https://openlogicproject.org">Open Logic Project</a><br>
<a href="https://www.elsevier.com/books/book-series/handbook-of-the-history-of-logic">Handbook of the History of Logic</a><br>
<a href="https://www.logicmatters.net">Logic Matters</a><br>
<a href="https://www.seas.harvard.edu/courses/cs252/2016fa/">History of Programming Languages</a><br>
<a href="https://learnxinyminutes.com">Learn X in Y Minutes</a><br>
<a href="https://siek.blogspot.com/2012/07/crash-course-on-notation-in-programming.html">Crash Course on Notation in Programming Language Theory</a><br>
<a href="http://math.hws.edu/FoundationsOfComputation/">Foundations of Computation</a><br>
<a href="https://steshaw.org/plt/">Programming Language Theory</a><br>
<a href="https://www.cs.cmu.edu/~crary/819-f09/">Classic Papers in Programming Languages and Logic</a> by <a href="https://www.cs.cmu.edu/~crary/">Karl Crary</a><br>
<a href="https://www.cis.upenn.edu/~bcpierce/courses/670Fall04/GreatWorksinPL.shtml">Great Works in Programming Languages</a> Collected by Benjamin C. Pierce<br>
<a href="https://softwarefoundations.cis.upenn.edu/index.html">The Software Foundations series is a broad introduction to the mathematical underpinnings of reliable software.</a> &amp; <a href="https://coq-zh.github.io/SF-zh/">中译版《软件基础》</a><br>
&lt; The Calculi of Lambda-Conversion &gt;  Alonzo Church<br>
<a href="https://hbr.github.io/Lambda-Calculus/">Lambda Calculus</a><br>
<a href="https://turing100.acm.org/lambda_calculus_timeline.pdf">λ-Calculus: Then &amp; Now</a>     Dana S. Scott<br>
<a href="https://www.cs.utah.edu/~mflatt/past-courses/cs7520/public_html/s06/notes.pdf">Programming Languages and Lambda Calculi</a><br>
&lt; Type and Programming Languages &gt; 译《类型和程序设计语言》<br>
<a href="http://lambda-the-ultimate.org">Lambda the Ultimate</a><br>
<a href="https://theory.cs.princeton.edu/complexity/book.pdf">&lt; Computational Complexity: A Modern Approach &gt;</a></p>
<p>Lisp：<a href="https://github.com/alaskasquirrel/Lisp-China">本人github项目Lisp-China</a></p>
<ul>
<li><a href="https://www.whoishostingthis.com/resources/lisp/">Learn Lisp Programming:Intro,Versions,and More</a></li>
<li><a href="https://stevelosh.com/blog/2018/08/a-road-to-common-lisp/">A Road to Common Lisp</a></li>
<li><a href="http://www.softwarepreservation.org/projects/LISP">History of Lisp</a> - <a href="https://mcjones.org/">Paul Mcjones</a></li>
<li><a href="https://european-lisp-symposium.org">European Lisp Symposium</a></li>
<li>&lt; Scheme and the Art of Programing &gt;</li>
<li>&lt; Essentials of Programming Languages &gt;</li>
<li>&lt;<a href="https://www.scheme.com/tspl4">The Scheme Programming Language, 4th Edition</a>&gt;</li>
<li>&lt;<a href="https://www.cs.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/html/cltl/cltl2.html">Common Lisp the Language, 2nd Edition</a>&gt; by  Guy L. Steele Jr. &amp;全面且详细</li>
<li><a href="http://paulgraham.com/onlisptext.html">&lt; On Lisp: Advanced Techniques for Common Lisp&gt;</a>Paul Graham 高级编程 &amp;  <a href="https://sourceforge.net/projects/onlisp-cn/files/onlisp-cn_20140217.pdf/download">中文翻译</a></li>
<li><a href="https://letoverlambda.com/textmode.cl"><Let Over Lambda></a>Doug Hoyte 《On《On Lisp》》</li>
<li><a href="https://www.gigamonkeys.com/book/"><Practical Common Lisp></a>Peter Seibel 译《实用Common Lisp编程》田春</li>
<li>&lt; Object-Oriented Programming in Common LISP: A Programmer's Guide to CLOS&gt;Sonja E. Keene</li>
<li>&lt; ANSI Common Lisp &gt;Paul Graham <a href="https://acl.readthedocs.io/en/latest/zhCN/index.html">中文翻译</a> &amp; 基础教程</li>
<li>&lt;<a href="https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/book.html">Structure and Interpretation of Computer Programs</a>&gt; 译《计算机程序的构造与解释》</li>
<li>&lt; Lisp in Small Pieces&gt; Christian Queinnec</li>
<li>&lt;<a href="https://github.com/norvig/paip-lisp">Paradigms of Artificial Intelligence Programming: Case Studies in Common Lisp</a>&gt; &amp; 经典AI算法，侧重逻辑和推理。study lisp.</li>
<li><a href="https://legacy-cs.sice.indiana.edu/~dfried/">&lt;小人书&gt;</a>Daniel P. Friedman</li>
<li>&lt; Clojure Programming &gt;</li>
</ul>
<p>&lt;<a href="https://www.cs.cmu.edu/~rwh/pfpl/">Practical Foundations for Programming Languages</a>&gt;  Second Editon by Robert Harper<br>
&lt; Programming Language Pragmatics&gt; 译《程序设计语言——实践之路》Michael L. Scott<br>
&lt;<a href="https://norvig.com/design-patterns/design-patterns.pdf">Design Patterns in Dynamic Programming</a>&gt;  by <a href="http://norvig.com/">Peter Norvig</a><br>
&lt; Inside The Python Virtual Machine&gt; Obi ike-Nwosu<br>
<a href="https://michaelfeathers.silvrback.com/10-papers-every-developer-should-read-at-least-twice">10 Papers Every Developer Should Read</a><br>
&lt; The Golden Ticket&gt; 2013 &amp; 介绍NP完全问题和P=NP问题<br>
&lt; From Frege to Godel A Source Book in Mathematical Logic, 1879-1931 &gt;<br>
&lt; The Annotated Turing&gt; Charles Petzold 2008<br>
《数学哲学：对数学的思考》Stewart Shapiro 郝兆宽(译) 杨睿之(译)<br>
《图灵的秘密：他的生平、思想及论文解读》Charles Petzold<br>
《逻辑的引擎》Martin Davis<br>
《可计算性与不可解性》Martin Davis<br>
《逻辑与计算机设计基础》M.Morris Mano/Charles R.Kime<br>
《奇思妙想-15位计算机天才及其重大发现》4e. Dennis E.Shasha/Cathy A.Lazere<br>
《编程人生 - 15位软件先驱访谈录》Peter Seibel<br>
《编程之魂-与27位编程语言创始人对话》Federico Biancuzzi /Shane Wardern<br>
《七周七语言：理解多种编程范型》Bruce A. Tate 2010<br>
《没有时间的世界：爱因斯坦与哥德尔被遗忘的财富》Palle Yourgrau 2009<br>
&lt; Godel Meets Einstein: Time Travel in the Godel Universe&gt; Palle Yourgrau 1999<br>
《数学之美》吴军<br>
《人工智能》上下册 陆汝钤</p>
<p>教師課程：☣️</p>
<p><a href="https://www.cs.cornell.edu/courses/cs7194/2019sp/">cs7194(Spring 2019) Great Works in Programming Languages</a><br>
<a href="https://www.cst.cam.ac.uk/teaching">Computer Science and Technology</a> University of Cambridge<br>
<a href="http://ocw.aca.ntu.edu.tw/ntu-ocw/">臺大開放式課程(NTU OpenCourseWare)</a><br>
<a href="http://www-scf.usc.edu/~csci564/">cs564-Fall2000      Brain Theory and Artificial Intelligence</a><br>
<a href="https://www.cs.princeton.edu/courses/archive/fall19/cos326/">cos326: Functional Programming(fall2019)Princeton</a><br>
<a href="http://gis4g.pku.edu.cn/course/">北京大学新一代GIS研究室   教学课程</a></p>
<table>
<thead>
<tr>
<th style="text-align:center">教师</th>
<th style="text-align:center">课程</th>
<th style="text-align:center">学校</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><a href="http://www.math.pku.edu.cn/teachers/qiuzy/">裘宗燕</a></td>
<td style="text-align:center"><a href="http://www.math.pku.edu.cn/teachers/qiuzy/progtech/">程序设计技术和方法(2014春季)</a>；<a href="http://www.math.pku.edu.cn/teachers/qiuzy/plam/">程序设计语言原理</a></td>
<td style="text-align:center">北京大学</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://cs.nju.edu.cn/xyfeng/">冯新宇</a></td>
<td style="text-align:center"><a href="https://cs.nju.edu.cn/xyfeng/teaching/SICP/">Structure and Interpretation of Computer Programs(Fall19)</a>; <a href="https://cs.nju.edu.cn/xyfeng/teaching/FOPL/">Foundations of Programming Languages</a>(Fall17)</td>
<td style="text-align:center">南京大学</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://yiqinnju.github.io/">秦逸</a></td>
<td style="text-align:center"><a href="https://yiqinnju.github.io/course/MathLogic/MathLogic.html">数理逻辑</a>(2020Spring); <a href="https://yiqinnju.github.io/disMath.html">离散数学</a>(Fall19)</td>
<td style="text-align:center">南京大学</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://silverbullettt.bitbucket.io">谭添</a></td>
<td style="text-align:center"><a href="https://pascal-group.bitbucket.io/teaching.html">Software Analysis / Static Program Analysic</a> with <a href="https://yuelee.bitbucket.io">Yue Li 李樾</a></td>
<td style="text-align:center">南京大学</td>
</tr>
<tr>
<td style="text-align:center">梁红瑾</td>
<td style="text-align:center"><a href="https://cs.nju.edu.cn/hongjin/teaching/semantics/index.htm">程序设计语言的形式语义(Formal Semantics of Programming Languages)</a>(Fall19); <a href="https://cs.nju.edu/hongjin/teaching/concurrncy/index.htm">并发算法与理论(Concurrency:Algorithms and Theories)</a>(Fall19)</td>
<td style="text-align:center">南京大学</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://cs.nju.edu.cn/changxu/">许畅</a></td>
<td style="text-align:center"><a href="https://cs.nju.edu.cn/changxu/2_compiler/index.html">编译原理(Principles and Techniques of Compilers)</a></td>
<td style="text-align:center">南京大学</td>
</tr>
<tr>
<td style="text-align:center">熊英飞</td>
<td style="text-align:center">详见 https://xiongyingfei.github.io</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">宋富</td>
<td style="text-align:center">详见 http://faculty.sist.shanghaitech.edu.cn/faculty/songfu/#teaching</td>
<td style="text-align:center">上海科技大学</td>
</tr>
<tr>
<td style="text-align:center"><a href="http://staff.ustc.edu.cn/~yuzhang/">张昱</a></td>
<td style="text-align:center"><a href="http://staff.ustc.edu.cn/~yuzhang/fopl/">Foundations of Programming Languages</a>; <a href="http://staff.ustc.edu.cn/~yuzhang/compiler/index.html">Principles and Techniques of Compilers</a>; <a href="http://staff.ustc.edu.cn/~yuzhang/tpl/index.html">Theory of Programming Languages</a></td>
<td style="text-align:center">中国科学技术大学</td>
</tr>
<tr>
<td style="text-align:center">王彦晶</td>
<td style="text-align:center">详见 http://wangyanjing.com/teaching</td>
<td style="text-align:center">北京大学 哲学系</td>
</tr>
<tr>
<td style="text-align:center">郝兆宽 、杨睿之 、杨跃</td>
<td style="text-align:center"><a href="http://fdjpkc.fudan.edu.cn/d201409/main.htm">数理逻辑</a></td>
<td style="text-align:center">复旦大学 哲学系</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://people.mpi-sws.org/~dreyer/">Derek Dreyer</a></td>
<td style="text-align:center"><a href="https://ttic.uchicago.edu/~dreyer/course/">CMSC 32001-1: Advanced Type Systems</a> &amp; 详见 https://people.mpi-sws.org/~dreyer/teaching.html</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">Courses in CSE</td>
<td style="text-align:center">详见 https://www.cs.washington.edu/education/courses</td>
<td style="text-align:center">Washington</td>
</tr>
<tr>
<td style="text-align:center">CS143: Compiler</td>
<td style="text-align:center">详见 https://web.stanford.edu/class/cs143/</td>
<td style="text-align:center">Stanford</td>
</tr>
<tr>
<td style="text-align:center">CIS352-Spring 2019</td>
<td style="text-align:center">详见http://www.cis.syr.edu/courses/cis352/</td>
<td style="text-align:center">Syracuse</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://legacy-cs.sice.indiana.edu/~dfried/">Daniel P. Friedman</a></td>
<td style="text-align:center"><a href="https://cgi.soic.indiana.edu/~c311/doku.php">Programming Languages</a></td>
<td style="text-align:center">Indiana</td>
</tr>
<tr>
<td style="text-align:center">Matthias Felleisen</td>
<td style="text-align:center">详见 https://felleisen.org/matthias/teaching.html</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><a href="https://www.cs.utah.edu/~mflatt/">Matthew Flatt</a> 马晓</td>
<td style="text-align:center">详见 https://www.cs.utah.edu/~mflatt/courses.html</td>
<td style="text-align:center">Utah</td>
</tr>
<tr>
<td style="text-align:center">Robert Harper</td>
<td style="text-align:center">详见 https://www.cs.cmu.edu/~rwh/</td>
<td style="text-align:center">Carnegie Mellon</td>
</tr>
<tr>
<td style="text-align:center">Brian Kernighan</td>
<td style="text-align:center">详见 https://www.cs.princeton.edu/~bwk/</td>
<td style="text-align:center">Princeton</td>
</tr>
<tr>
<td style="text-align:center">Benjamin C. Pierce</td>
<td style="text-align:center">详见 https://www.cis.upenn.edu/~bcpierce/</td>
<td style="text-align:center">Pennsylvania</td>
</tr>
<tr>
<td style="text-align:center">Gordon S. Novak Jr.</td>
<td style="text-align:center">详见 https://www.cs.utexas.edu/users/novak/</td>
<td style="text-align:center">Texas at Austin</td>
</tr>
<tr>
<td style="text-align:center">Graham Hutton</td>
<td style="text-align:center">详见 http://www.cs.nott.ac.uk/~pszgmh/</td>
<td style="text-align:center">Nottingham</td>
</tr>
<tr>
<td style="text-align:center">Lance R. Williams</td>
<td style="text-align:center">详见 https://www.cs.unm.edu/~williams/</td>
<td style="text-align:center">New Mexico</td>
</tr>
<tr>
<td style="text-align:center">Ray Toal</td>
<td style="text-align:center">详见 https://cs.lmu.edu/~ray/</td>
<td style="text-align:center">Loyola Marymount</td>
</tr>
<tr>
<td style="text-align:center">Matt Might</td>
<td style="text-align:center">详见 http://matt.might.net/#teaching</td>
<td style="text-align:center"><a href="https://www.uab.edu/medicine/pmi/matt-might">其子患罕见疾病，现转医学研究</a></td>
</tr>
<tr>
<td style="text-align:center">Scott Aaronson</td>
<td style="text-align:center">详见 https://scottaaronson.com/</td>
<td style="text-align:center">Texas at Austin</td>
</tr>
<tr>
<td style="text-align:center">Gopal Gupta</td>
<td style="text-align:center">详见 https://personal.utdallas.edu/~gupta/</td>
<td style="text-align:center">Texs at Dallas</td>
</tr>
<tr>
<td style="text-align:center">Stephen A. Cook</td>
<td style="text-align:center">详见 https://www.cs.toronto.edu/~sacook/</td>
<td style="text-align:center">Toronto</td>
</tr>
<tr>
<td style="text-align:center">Frank Pfenning</td>
<td style="text-align:center">详见 https://www.cs.cmu.edu/~fp/</td>
<td style="text-align:center">Carnegie Mellon</td>
</tr>
<tr>
<td style="text-align:center">이광근 Kwangkeun Yi</td>
<td style="text-align:center">详见 http://ropas.snu.ac.kr/~kwang/#teaching</td>
<td style="text-align:center">Seoul National 서울대학교</td>
</tr>
<tr>
<td style="text-align:center">Norbert Zeh</td>
<td style="text-align:center">详见 https://web.cs.dal.ca/~nzeh/index.html</td>
<td style="text-align:center">Dalhousie</td>
</tr>
<tr>
<td style="text-align:center">Nelma Moreira</td>
<td style="text-align:center">详见 https://www.dcc.fc.up.pt/~nam/web/Teaching/index.html</td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<ul>
<li><a href="https://amturing.acm.org/award_winners/perlis_0132439.cfm">Alan J. Perlis</a>  (1922-1990)</li>
<li><a href="https://www.cs.utexas.edu/users/EWD/">E.W. Dijkstra</a> (1930-2002)</li>
<li><a href="http://www-formal.stanford.edu/jmc/">John McCarthy</a> (1927-2011)</li>
<li><a href="https://www.cs.yale.edu/homes/aspnes/">James Aspnes</a></li>
<li><a href="https://legacy.cs.indiana.edu/~dyb/">R. Kent Dybvig</a></li>
<li><a href="http://webyrd.net">William Eyrd</a></li>
<li><a href="http://www.madore.org/~david/sitemap.html">David Madore</a></li>
<li><a href="https://users.cs.duke.edu/~reif/">John H. Reif</a></li>
<li><a href="https://www.cs.princeton.edu/~arora/">Sanjeev Arora</a></li>
<li><a href="https://www.boazbarak.org/">Boaz Barak</a></li>
<li><a href="http://people.cs.ksu.edu/~schmidt/">David Schmidt</a></li>
</ul>
<p>Channel 9:</p>
<ul>
<li><a href="https://https://channel9.msdn.com/Blogs/Charles/Anders-Hejlsberg-and-Guy-Steele-Comcurrency-and-Language-Design">Anders Hejlsberg and Guy Steele: Concurrency and Language Design</a> October 6, 2008.</li>
<li><a href="https://channel9.msdn.com/Blogs/Charles/Anders-Heljsberf-and-Gilad-Bracha-Perspectives-on-Programming-Language-Design">Anders Hejlsberg and Gilad Bracha: Perspectives on Programming Language Design</a> April 29, 2009.</li>
<li><a href="https://channel9.msdn.com/Blog/mtthijs/Anders-Hejlsberg-Trends-and-Future-Directions-in-Programming-Languages-DevDays-2010-Keynote">Anders Hejlsberg Trends and Future Directions in Programming Languages</a> April 20, 2010.</li>
<li><a href="https://channel9.msdn.com/Blogs/Seth-Juarez/Anders-Hejlsberg-on-Modern-Compiler-Construction">Anders Hejlsberg on Modern Compiler Construction</a> May 13, 2016.</li>
</ul>
<p>Security：⌚️</p>
<p><a href="https://paper.seebug.org">SeeBug Paper 安全技术精粹</a><br>
<a href="https:krebsonsecurity.com">KrebsOnSecurity</a><br>
<a href="https://www.schneier.com">️️Bruce Schneier on Security</a><br>
<a href="http://wiki.ioin.in">Sec-News 安全文摘</a><br>
<a href="https://citizenlab.ca">The Citizen Lab</a><br>
<a href="https://gfw.report/">GFW Report</a><br>
<a href="https://seclists.org">SecLists.Org Security Mailing List Archive</a><br>
<a href="https://public-interest-tech.com">Public-Interest Technology Resources</a><br>
<a href="https://www.cryptolux.org/index.php/Home">CryptoLUX</a><br>
<a href="https://crypto.stanford.edu">Applied Cryptography Group</a><br>
<a href="http://seclab.stanford.edu">Stanford Computer Security Laboratory</a></p>
<p><img src="https://alaskasquirrel.github.io/post-images/1597128759022.jpg" alt="" loading="lazy"><br>
(still-life-with-flowers-in-a-glass-vase-jan-davidsz-de-heem-1650)</p>
]]></content>
    </entry>
</feed>